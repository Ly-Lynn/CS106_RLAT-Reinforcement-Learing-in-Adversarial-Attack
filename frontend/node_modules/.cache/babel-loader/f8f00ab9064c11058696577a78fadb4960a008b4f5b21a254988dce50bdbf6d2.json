{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId, useMemo, Children, useRef, useState, useEffect, useImperativeHandle } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { TabItem } from './TabItem.mjs';\nconst TabsComponent = forwardRef(({\n  children,\n  className,\n  onActiveTabChange,\n  style = \"default\",\n  theme: customTheme = {},\n  ...props\n}, ref) => {\n  const theme = mergeDeep(getTheme().tabs, customTheme);\n  const id = useId();\n  const tabs = useMemo(() => Children.map(Children.toArray(children), ({\n    props: props2\n  }) => props2), [children]);\n  const tabRefs = useRef([]);\n  const [activeTab, setActiveTab] = useState(Math.max(0, tabs.findIndex(tab => tab.active)));\n  const [focusedTab, setFocusedTab] = useState(-1);\n  const setActiveTabWithCallback = activeTab2 => {\n    setActiveTab(activeTab2);\n    if (onActiveTabChange) onActiveTabChange(activeTab2);\n  };\n  const handleClick = ({\n    target\n  }) => {\n    setActiveTabWithCallback(target);\n    setFocusedTab(target);\n  };\n  const handleKeyboard = ({\n    event,\n    target\n  }) => {\n    if (event.key === \"ArrowLeft\") {\n      setFocusedTab(Math.max(0, focusedTab - 1));\n    }\n    if (event.key === \"ArrowRight\") {\n      setFocusedTab(Math.min(tabs.length - 1, focusedTab + 1));\n    }\n    if (event.key === \"Enter\") {\n      setActiveTabWithCallback(target);\n      setFocusedTab(target);\n    }\n  };\n  const tabItemStyle = theme.tablist.tabitem.styles[style];\n  const tabItemContainerStyle = theme.tabitemcontainer.styles[style];\n  useEffect(() => {\n    tabRefs.current[focusedTab]?.focus();\n  }, [focusedTab]);\n  useImperativeHandle(ref, () => ({\n    setActiveTab: setActiveTabWithCallback\n  }));\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: twMerge(theme.base, className),\n    children: [/* @__PURE__ */jsx(\"div\", {\n      \"aria-label\": \"Tabs\",\n      role: \"tablist\",\n      className: twMerge(theme.tablist.base, theme.tablist.styles[style], className),\n      ...props,\n      children: tabs.map((tab, index) => /* @__PURE__ */jsxs(\"button\", {\n        type: \"button\",\n        \"aria-controls\": `${id}-tabpanel-${index}`,\n        \"aria-selected\": index === activeTab,\n        className: twMerge(theme.tablist.tabitem.base, tabItemStyle.base, index === activeTab && tabItemStyle.active.on, index !== activeTab && !tab.disabled && tabItemStyle.active.off),\n        disabled: tab.disabled,\n        id: `${id}-tab-${index}`,\n        onClick: () => handleClick({\n          target: index\n        }),\n        onKeyDown: event => handleKeyboard({\n          event,\n          target: index\n        }),\n        ref: element => tabRefs.current[index] = element,\n        role: \"tab\",\n        tabIndex: index === focusedTab ? 0 : -1,\n        style: {\n          zIndex: index === focusedTab ? 2 : 1\n        },\n        children: [tab.icon && /* @__PURE__ */jsx(tab.icon, {\n          className: theme.tablist.tabitem.icon\n        }), tab.title]\n      }, index))\n    }), /* @__PURE__ */jsx(\"div\", {\n      className: twMerge(theme.tabitemcontainer.base, tabItemContainerStyle),\n      children: tabs.map((tab, index) => /* @__PURE__ */jsx(\"div\", {\n        \"aria-labelledby\": `${id}-tab-${index}`,\n        className: theme.tabpanel,\n        hidden: index !== activeTab,\n        id: `${id}-tabpanel-${index}`,\n        role: \"tabpanel\",\n        tabIndex: 0,\n        children: tab.children\n      }, index))\n    })]\n  });\n});\nTabsComponent.displayName = \"Tabs\";\nconst Tabs = Object.assign(TabsComponent, {\n  Item: TabItem\n});\nexport { Tabs };","map":{"version":3,"names":["TabsComponent","forwardRef","children","className","onActiveTabChange","style","theme","customTheme","props","ref","mergeDeep","getTheme","tabs","id","useId","useMemo","Children","map","toArray","props2","tabRefs","useRef","activeTab","setActiveTab","useState","Math","max","findIndex","tab","active","focusedTab","setFocusedTab","setActiveTabWithCallback","activeTab2","handleClick","target","handleKeyboard","event","key","min","length","tabItemStyle","tablist","tabitem","styles","tabItemContainerStyle","tabitemcontainer","useEffect","current","focus","useImperativeHandle","jsxs","twMerge","base","jsx","role","index","type","on","disabled","off","onClick","onKeyDown","element","tabIndex","zIndex","icon","title","tabpanel","hidden","displayName","Tabs","Object","assign","Item","TabItem"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Tabs\\Tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, ForwardedRef, KeyboardEvent, PropsWithChildren, ReactElement } from \"react\";\nimport { Children, forwardRef, useEffect, useId, useImperativeHandle, useMemo, useRef, useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean } from \"../Flowbite\";\nimport type { TabItemProps } from \"./TabItem\";\nimport { TabItem } from \"./TabItem\";\n\nexport interface FlowbiteTabsTheme {\n  base: string;\n  tablist: {\n    base: string;\n    styles: TabStyles;\n    tabitem: {\n      base: string;\n      styles: TabStyleItem<TabStyles>;\n      icon: string;\n    };\n  };\n  tabitemcontainer: {\n    base: string;\n    styles: TabStyles;\n  };\n  tabpanel: string;\n}\n\nexport interface TabStyles {\n  default: string;\n  fullWidth: string;\n  pills: string;\n  underline: string;\n}\n\nexport interface TabStyleItemProps {\n  base: string;\n  active: FlowbiteBoolean;\n}\n\nexport type TabStyleItem<Type> = {\n  [K in keyof Type]: TabStyleItemProps;\n};\n\nexport type TabItemStatus = \"active\" | \"notActive\";\n\ninterface TabEventProps {\n  target: number;\n}\n\ninterface TabKeyboardEventProps extends TabEventProps {\n  event: KeyboardEvent<HTMLButtonElement>;\n}\n\nexport interface TabsProps extends Omit<ComponentProps<\"div\">, \"ref\" | \"style\"> {\n  onActiveTabChange?: (activeTab: number) => void;\n  style?: keyof TabStyles;\n  theme?: DeepPartial<FlowbiteTabsTheme>;\n}\n\nexport interface TabsRef {\n  setActiveTab: (activeTab: number) => void;\n}\n\nconst TabsComponent = forwardRef<TabsRef, TabsProps>(\n  (\n    { children, className, onActiveTabChange, style = \"default\", theme: customTheme = {}, ...props },\n    ref: ForwardedRef<TabsRef>,\n  ) => {\n    const theme = mergeDeep(getTheme().tabs, customTheme);\n\n    const id = useId();\n    const tabs = useMemo(\n      () =>\n        Children.map(\n          Children.toArray(children) as ReactElement<PropsWithChildren<TabItemProps>>[],\n          ({ props }) => props,\n        ),\n      [children],\n    );\n    const tabRefs = useRef<HTMLButtonElement[]>([]);\n    const [activeTab, setActiveTab] = useState(\n      Math.max(\n        0,\n        tabs.findIndex((tab) => tab.active),\n      ),\n    );\n    const [focusedTab, setFocusedTab] = useState(-1);\n\n    const setActiveTabWithCallback = (activeTab: number) => {\n      setActiveTab(activeTab);\n      if (onActiveTabChange) onActiveTabChange(activeTab);\n    };\n\n    const handleClick = ({ target }: TabEventProps): void => {\n      setActiveTabWithCallback(target);\n      setFocusedTab(target);\n    };\n\n    const handleKeyboard = ({ event, target }: TabKeyboardEventProps): void => {\n      if (event.key === \"ArrowLeft\") {\n        setFocusedTab(Math.max(0, focusedTab - 1));\n      }\n\n      if (event.key === \"ArrowRight\") {\n        setFocusedTab(Math.min(tabs.length - 1, focusedTab + 1));\n      }\n\n      if (event.key === \"Enter\") {\n        setActiveTabWithCallback(target);\n        setFocusedTab(target);\n      }\n    };\n\n    const tabItemStyle = theme.tablist.tabitem.styles[style];\n    const tabItemContainerStyle = theme.tabitemcontainer.styles[style];\n\n    useEffect(() => {\n      tabRefs.current[focusedTab]?.focus();\n    }, [focusedTab]);\n\n    useImperativeHandle(ref, () => ({\n      setActiveTab: setActiveTabWithCallback,\n    }));\n\n    return (\n      <div className={twMerge(theme.base, className)}>\n        <div\n          aria-label=\"Tabs\"\n          role=\"tablist\"\n          className={twMerge(theme.tablist.base, theme.tablist.styles[style], className)}\n          {...props}\n        >\n          {tabs.map((tab, index) => (\n            <button\n              key={index}\n              type=\"button\"\n              aria-controls={`${id}-tabpanel-${index}`}\n              aria-selected={index === activeTab}\n              className={twMerge(\n                theme.tablist.tabitem.base,\n                tabItemStyle.base,\n                index === activeTab && tabItemStyle.active.on,\n                index !== activeTab && !tab.disabled && tabItemStyle.active.off,\n              )}\n              disabled={tab.disabled}\n              id={`${id}-tab-${index}`}\n              onClick={() => handleClick({ target: index })}\n              onKeyDown={(event) => handleKeyboard({ event, target: index })}\n              ref={(element) => (tabRefs.current[index] = element as HTMLButtonElement)}\n              role=\"tab\"\n              tabIndex={index === focusedTab ? 0 : -1}\n              style={{ zIndex: index === focusedTab ? 2 : 1 }}\n            >\n              {tab.icon && <tab.icon className={theme.tablist.tabitem.icon} />}\n              {tab.title}\n            </button>\n          ))}\n        </div>\n        <div className={twMerge(theme.tabitemcontainer.base, tabItemContainerStyle)}>\n          {tabs.map((tab, index) => (\n            <div\n              key={index}\n              aria-labelledby={`${id}-tab-${index}`}\n              className={theme.tabpanel}\n              hidden={index !== activeTab}\n              id={`${id}-tabpanel-${index}`}\n              role=\"tabpanel\"\n              tabIndex={0}\n            >\n              {tab.children}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\nTabsComponent.displayName = \"Tabs\";\n\nexport const Tabs = Object.assign(TabsComponent, {\n  Item: TabItem,\n});\n"],"mappings":";;;;;;;;AASA,MAAKA,aAAU,GAAAC,UAAW,CAC1B;EAAIC,QAAM;EAAKC,SAAG;EAAAC,iBAAyB;EAAEC,KAAA,YAAa;EAAAC,KAAA,EAAAC,WAAA;EAAA,GAAAC;AAAA,GAAAC,GAAA;EACtD,MAAMH,KAAK,GAAAI,SAAQ,CAAAC,QAAA,GAAAC,IAAA,EAAAL,WAAA;EACnB,MAAMM,EAAA,GAAIC,KAAG;EACjB,MAAMF,IAAM,GAAAG,OAAY,CACxB,MAAQC,QAAS,CAAAC,GAAO,CAChBD,QAAQ,CAAAE,OAAQ,CAAAhB,QAAO,GACxB;IAAAM,KAAA,EAAAW;EAAA,MAAAA,MACD,CAAC,EACD,CAAAjB,QAAA,CACF;EACA,MAAMkB,OAAC,GAASC,MAAE;EACtB,MAAU,CAACC,SAAG,EAAAC,YAAA,IAAAC,QAAA,CACdC,IAAS,CAAAC,GAAA,CACD,GACDd,IAAA,CAAAe,SAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,MAAA,CACD,CACF;EACA,MAAM,CAAAC,UAAA,EAAAC,aAAwB,CAAG,GAACP,QAAU;EAChD,MAAMQ,wBAAyB,GAAAC,UAAA;IACzBV,YAAI,CAAAU,UAAiB;IAC3B,IAAQ7B,iBAAkB,EACpBA,iBAAA,CAAA6B,UAAA;EACF;EACJ,MAAMC,WAAA,GAAAA,CAAA;IAAAC;EAAyB,MAAQ;IACjCH,wBAAsB,CAAAG,MAAA;IACtBJ,aAAA,CAAAI,MAAA;EACF;EACJ,MAAUC,cAAc,GAAAA,CAAA;IAAAC,KAAW;IAAEF;EAAA;IACrC,IAAQE,KAAA,CAAAC,GAAA,KAAc,WAAY;MAC3BP,aAAA,CAAAN,IAAA,CAAAC,GAAA,IAAAI,UAAA;IACD;IACN,IAAQO,KAAA,CAAAC,GAAA,KAAc,YAAc;MAC7BP,aAAA,CAAAN,IAAA,CAAAc,GAAA,CAAA3B,IAAA,CAAA4B,MAAA,MAAAV,UAAA;IACD;IACN,IAAQO,KAAA,CAAAC,GAAA,cAAyB;MACzBN,wBAAsB,CAAAG,MAAA;MACvBJ,aAAA,CAAAI,MAAA;IACD;EACF;EACA,MAAMM,YAAA,GAAAnC,KAAA,CAAqBoC,OAAG,CAAKC,OAAC,CAAAC,MAAA,CAAAvC,KAAiB;EACrD,MAAAwC,qBAAgB,GAAAvC,KAAA,CAAAwC,gBAAA,CAAAF,MAAA,CAAAvC,KAAA;EACpB0C,SAAa,CAAC;IACT3B,OAAG,CAAA4B,OAAa,CAAAlB,UAAA,GAAAmB,KAAA;EACjB,IAAAnB,UAAA;EACJoB,mBAAoB,CAAAzC,GAAA;IACdc,YAAE,EAAAS;EACJ;EACJ,sBAAyBmB,IAAA;IAAAhD,SAAA,EAAAiD,OAAA,CAAA9C,KAAA,CAAA+C,IAAA,EAAAlD,SAAA;IAAAD,QAAA,GACzB,eAAaoD,GAAA,CACL,OACR;MACU,YAAM,QAAS;MACfC,IAAA,WAAW;MACXpD,SAAQ,EAAAiD,OAAA,CAAA9C,KAAA,CAAAoC,OAAA,CAAAW,IAAA,EAAA/C,KAAA,CAAAoC,OAAA,CAAAE,MAAA,CAAAvC,KAAA,GAAAF,SAAA;MACR,GAAAK,KAAQ;MAClBN,QAAY,EAAQU,IAAA,CAAAK,GAAA,EAAAW,GAAA,EAAA4B,KAAA,oBAAAL,IAAA,CACR,UACZ;QACcM,IAAA;QACA,eAAe,EAAE,GAAA5C,EAAK,aAAK2C,KAAS;QACpC,eAAW,EAAAA,KAAO,KAAAlC,SAAA;QAChCnB,SAAsB,EAAAiD,OAAQ,CACd9C,KAAA,CAAAoC,OAAa,CAAAC,OAAI,CAAAU,IAAA,EACjBZ,YAAU,CAAAY,IAAA,EACVG,KAAK,KAAKlC,SAAS,IAAImB,YAAK,CAAQZ,MAAI,CAAA6B,EAAA,EACzCF,KAAA,KAAAlC,SAAA,KAAAM,GAAA,CAAA+B,QAAA,IAAAlB,YAAA,CAAAZ,MAAA,CAAA+B,GACD;QACAD,QAAO,EAAG/B,GAAA,CAAA+B,QAAY;QACtB9C,EAAA,KAAOA,EAAE,QAAM2C,KAAA;QACfK,OAAA,EAASA,CAAA,KAAG3B,WAAU;UAAAC,MAAA,EAAeqB;QAAE,CAAK;QAC5CM,SAAM,EAAAzB,KAAO,IAAKD,cAAgB;UAAKC,KAAI;UAAAF,MAAO,EAAAqB;QAAA;QAClD/C,GAAA,EAAMsD,OAAK,IAAA3C,OAAA,CAAA4B,OAAA,CAAAQ,KAAA,IAAAO,OAAA;QACXR,IAAA,OAAU;QACVS,QAAO,EAAER,KAAM,KAAE1B,UAAU,OAAU;QACrCzB,KAAA;UAAQ4D,MAAE,EAAAT,KAAA,KAAA1B,UAAA;QAAA;QACxB5B,QAAoB,EAAI,CACR0B,GAAG,CAACsC,IAAA,IAAK,eAAAZ,GAAA,CAAA1B,GAAA,CAAAsC,IAAA;UAAA/D,SAAA,EAAAG,KAAA,CAAAoC,OAAA,CAAAC,OAAA,CAAAuB;QAAA,IACVtC,GAAA,CAAAuC,KAAA;MAEH,GACAX,KACH;IACF,CACP,GACA,eAAaF,GAAA;MAAAnD,SAAA,EAAAiD,OAAA,CAAA9C,KAAA,CAAAwC,gBAAA,CAAAO,IAAA,EAAAR,qBAAA;MAAA3C,QAAA,EAAAU,IAAA,CAAAK,GAAA,EAAAW,GAAA,EAAA4B,KAAA,oBAAAF,GAAA,CACL,OACR;QACU,iBAAiB,KAAAzC,EAAA,QAAQ2C,KAAA;QACzBrD,SAAQ,EAAAG,KAAK,CAAA8D,QAAK;QAClBC,MAAK,EAAEb,KAAG,KAAAlC,SAAiB;QAC3BT,EAAA,EAAI,GAAEA,EAAA,aAAU2C,KAAA;QAChBD,IAAA,YAAW;QACXS,QAAQ,EAAE;QACX9D,QAAA,EAAA0B,GAAA,CAAA1B;MACD,GACAsD,KACH,CAAE;IAAE;EACN;AACD,CACF;AACYxD,aAAQ,CAAAsE,WAAO,GAAO;AAClC,MAAMC,IAAE,GAAAC,MAAO,CAAAC,MAAA,CAAAzE,aAAA;EACd0E,IAAA,EAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}