{"ast":null,"code":"import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { HelperText } from '../HelperText/HelperText.mjs';\nconst Textarea = forwardRef(({\n  className,\n  color = \"gray\",\n  helperText,\n  shadow,\n  theme: customTheme = {},\n  ...props\n}, ref) => {\n  const theme = mergeDeep(getTheme().textarea, customTheme);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(\"textarea\", {\n      ref,\n      className: twMerge(theme.base, theme.colors[color], theme.withShadow[shadow ? \"on\" : \"off\"], className),\n      ...props\n    }), helperText && /* @__PURE__ */jsx(HelperText, {\n      color,\n      children: helperText\n    })]\n  });\n});\nTextarea.displayName = \"Textarea\";\nexport { Textarea };","map":{"version":3,"names":["Textarea","forwardRef","className","color","helperText","shadow","theme","customTheme","props","ref","mergeDeep","getTheme","textarea","jsxs","Fragment","children","jsx","twMerge","base","colors","withShadow","HelperText","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Textarea\\Textarea.tsx"],"sourcesContent":["import type { ComponentProps, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean, FlowbiteColors } from \"../Flowbite\";\nimport { HelperText } from \"../HelperText\";\n\nexport interface FlowbiteTextareaTheme {\n  base: string;\n  colors: TextareaColors;\n  withShadow: FlowbiteBoolean;\n}\n\nexport interface TextareaColors extends Pick<FlowbiteColors, \"gray\" | \"info\" | \"failure\" | \"warning\" | \"success\"> {\n  [key: string]: string;\n}\n\nexport interface TextareaProps extends Omit<ComponentProps<\"textarea\">, \"color\" | \"ref\"> {\n  color?: keyof TextareaColors;\n  helperText?: ReactNode;\n  shadow?: boolean;\n  theme?: DeepPartial<FlowbiteTextareaTheme>;\n}\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, color = \"gray\", helperText, shadow, theme: customTheme = {}, ...props }, ref) => {\n    const theme = mergeDeep(getTheme().textarea, customTheme);\n\n    return (\n      <>\n        <textarea\n          ref={ref}\n          className={twMerge(theme.base, theme.colors[color], theme.withShadow[shadow ? \"on\" : \"off\"], className)}\n          {...props}\n        />\n        {helperText && <HelperText color={color}>{helperText}</HelperText>}\n      </>\n    );\n  },\n);\n\nTextarea.displayName = \"Textarea\";\n"],"mappings":";;;;;;AAOY,MAACA,QAAQ,GAAGC,UAAU,CAChC,CAAC;EAAEC,SAAS;EAAEC,KAAK,GAAG,MAAM;EAAEC,UAAU;EAAEC,MAAM;EAAEC,KAAK,EAAEC,WAAW,GAAG,EAAE;EAAE,GAAGC;AAAK,CAAE,EAAEC,GAAG,KAAK;EAC7F,MAAMH,KAAK,GAAGI,SAAS,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAEL,WAAW,CAAC;EACzD,sBAAuBM,IAAI,CAACC,QAAQ,EAAE;IAAEC,QAAQ,EAAE,CACtD,eAAsBC,GAAG,CACjB,UAAU,EACV;MACEP,GAAG;MACHP,SAAS,EAAEe,OAAO,CAACX,KAAK,CAACY,IAAI,EAAEZ,KAAK,CAACa,MAAM,CAAChB,KAAK,CAAC,EAAEG,KAAK,CAACc,UAAU,CAACf,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,EAAEH,SAAS,CAAC;MACvG,GAAGM;IACb,CACA,CAAO,EACDJ,UAAU,mBAAoBY,GAAG,CAACK,UAAU,EAAE;MAAElB,KAAK;MAAEY,QAAQ,EAAEX;IAAU,CAAE,CAAC;EAC/E,CAAE,CAAC;AACR,CACA;AACAJ,QAAQ,CAACsB,WAAW,GAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}