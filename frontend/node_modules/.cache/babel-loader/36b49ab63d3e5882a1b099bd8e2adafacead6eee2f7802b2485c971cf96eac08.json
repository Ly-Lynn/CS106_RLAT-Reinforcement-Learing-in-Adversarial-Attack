{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useRef, useState, useEffect } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst MegaMenuDropdownToggle = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const id = useId();\n  const ref = useRef(null);\n  const [controls, setControls] = useState(void 0);\n  const [isExpanded, setExpanded] = useState(void 0);\n  const theme = mergeDeep(getTheme().megaMenu.dropdownToggle, customTheme);\n  const findDropdown = function () {\n    const megaMenu = ref.current?.closest(\"nav\");\n    return megaMenu?.querySelector('[role=\"menu\"]');\n  };\n  const onClick = function () {\n    findDropdown()?.classList.toggle(\"hidden\");\n    setExpanded(!isExpanded);\n  };\n  useEffect(() => {\n    const dropdown = findDropdown();\n    const isDropdownHidden = dropdown?.classList.contains(\"hidden\");\n    setControls(dropdown?.id);\n    setExpanded(!isDropdownHidden);\n  }, []);\n  return /* @__PURE__ */jsx(\"button\", {\n    \"aria-controls\": controls,\n    \"aria-expanded\": isExpanded,\n    \"aria-haspopup\": \"menu\",\n    id,\n    onClick,\n    ref,\n    className: twMerge(theme.base, className),\n    ...props,\n    children\n  });\n};\nMegaMenuDropdownToggle.displayName = \"MegaMenu.DropdownToggle\";\nexport { MegaMenuDropdownToggle };","map":{"version":3,"names":["MegaMenuDropdownToggle","children","className","theme","customTheme","props","id","useId","ref","useRef","controls","setControls","useState","isExpanded","setExpanded","mergeDeep","getTheme","megaMenu","dropdownToggle","findDropdown","current","closest","querySelector","onClick","classList","toggle","useEffect","dropdown","isDropdownHidden","contains","jsx","twMerge","base"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\MegaMenu\\MegaMenuDropdownToggle.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useId, useRef, useState, type ComponentProps, type FC, type MouseEventHandler } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport { DeepPartial } from \"../../types\";\n\nexport interface FlowbiteMegaMenuDropdownToggleTheme {\n  base: string;\n}\n\nexport interface MegaMenuDropdownToggleProps extends ComponentProps<\"button\"> {\n  theme?: DeepPartial<FlowbiteMegaMenuDropdownToggleTheme>;\n}\n\nexport const MegaMenuDropdownToggle: FC<MegaMenuDropdownToggleProps> = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const id = useId();\n  const ref = useRef<HTMLButtonElement>(null);\n  const [controls, setControls] = useState<string | undefined>(undefined);\n  const [isExpanded, setExpanded] = useState<boolean | undefined>(undefined);\n\n  const theme = mergeDeep(getTheme().megaMenu.dropdownToggle, customTheme);\n\n  const findDropdown = function () {\n    const megaMenu = ref.current?.closest(\"nav\");\n\n    return megaMenu?.querySelector('[role=\"menu\"]');\n  };\n\n  const onClick: MouseEventHandler<HTMLButtonElement> = function () {\n    findDropdown()?.classList.toggle(\"hidden\");\n\n    setExpanded(!isExpanded);\n  };\n\n  useEffect(() => {\n    const dropdown = findDropdown();\n    const isDropdownHidden = dropdown?.classList.contains(\"hidden\");\n\n    setControls(dropdown?.id);\n    setExpanded(!isDropdownHidden);\n  }, []);\n\n  return (\n    <button\n      aria-controls={controls}\n      aria-expanded={isExpanded}\n      aria-haspopup=\"menu\"\n      id={id}\n      onClick={onClick}\n      ref={ref}\n      className={twMerge(theme.base, className)}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nMegaMenuDropdownToggle.displayName = \"MegaMenu.DropdownToggle\";\n"],"mappings":";;;;;;;AAQA,MAAEA,sBAAQ,GAAAA,CAAA;EACRC,QAAA;EACAC,SAAO;EACPC,KAAG,EAAAC,WAAK;EACT,GAAAC;AACD,MAAE;EACA,MAAMC,EAAA,GAAGC,KAAG,EAAM;EAClB,MAAMC,GAAC,GAAAC,MAAU;EACjB,MAAM,CAACC,QAAA,EAAUC,WAAE,IAAYC,QAAG,MAAS,EAAK;EAChD,MAAM,CAAAC,UAAQ,EAAAC,WAAU,IAAUF,QAAC,CAAQ,KAAC;EAC5C,MAAMT,KAAA,GAAAY,SAAe,CAAAC,QAAW,GAAAC,QAAA,CAAAC,cAAA,EAAAd,WAAA;EAClC,MAAIe,YAAc,GAAG,SAAAA,CAAA,EAAa;IAC9B,MAAAF,QAAO,GAAUT,GAAA,CAAAY,OAAA,EAAaC,OAAC;IAC/B,OAAAJ,QAAA,EAAAK,aAAA;EACF;EACF,MAAIC,OAAA,GAAc,SAAAA,CAAA,EAAW;IACzBJ,YAAY,CAAC,GAAAK,SAAY,CAAAC,MAAA;IACzBX,WAAA,EAAAD,UAAA;EACF;EACFa,SAAU,OAAQ;IACd,MAAMC,QAAA,GAAAR,YAAmB;IACzB,MAAAS,gBAAsB,GAAGD,QAAC,EAAAH,SAAA,CAAAK,QAAA;IAC1BlB,WAAW,CAACgB,QAAC,EAAArB,EAAA;IACdQ,WAAM,EAAAc,gBAAA;EACP;EACF,OAAI,eAAQE,GAAA,CACR,UACJ;IACM,eAAe,EAAEpB,QAAA;IACjB,eAAe,EAAEG,UAAM;IACvB,eAAE;IACFP,EAAA;IACAiB,OAAG;IACHf,GAAA;IACAN,SAAQ,EAAA6B,OAAA,CAAA5B,KAAA,CAAA6B,IAAA,EAAA9B,SAAA;IACR,GAAAG,KAAQ;IACTJ;EACD,CACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}