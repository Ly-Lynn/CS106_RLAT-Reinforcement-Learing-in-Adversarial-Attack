{"ast":null,"code":"'use client';\n\nimport { createContext, useContext } from 'react';\nconst AccordionPanelContext = createContext(void 0);\nfunction useAccordionContext() {\n  const context = useContext(AccordionPanelContext);\n  if (!context) {\n    throw new Error(\"useAccordionContext should be used within the AccordionPanelContext provider!\");\n  }\n  return context;\n}\nexport { AccordionPanelContext, useAccordionContext };","map":{"version":3,"names":["AccordionPanelContext","createContext","useAccordionContext","context","useContext","Error"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Accordion\\AccordionPanelContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext } from \"react\";\nimport type { AccordionPanelProps } from \"./AccordionPanel\";\n\ntype AccordionPanelContext = Omit<AccordionPanelProps, \"children\">;\n\nexport const AccordionPanelContext = createContext<AccordionPanelContext | undefined>(undefined);\n\nexport function useAccordionContext(): AccordionPanelContext {\n  const context = useContext(AccordionPanelContext);\n\n  if (!context) {\n    throw new Error(\"useAccordionContext should be used within the AccordionPanelContext provider!\");\n  }\n\n  return context;\n}\n"],"mappings":";;;AAIO,MAAAA,qBAAS,GAAmBC,aAAG;AACtC,SAAQC,mBAAoBA,CAAA,EAAC;EAC3B,MAAKC,OAAO,GAAEC,UAAA,CAAAJ,qBAAA;EAChB,IAAI,CAAAG,OAAU;IACX,UAAAE,KAAA;EACD;EACF,OAAAF,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}