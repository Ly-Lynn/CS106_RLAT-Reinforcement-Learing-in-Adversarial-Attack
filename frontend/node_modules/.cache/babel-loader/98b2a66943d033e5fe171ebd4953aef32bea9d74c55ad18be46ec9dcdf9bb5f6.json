{"ast":null,"code":"import React,{useState}from'react';import{Form,Button,Alert}from'react-bootstrap';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=_ref=>{let{setPrediction,setImage,setResize,setDraw,onFormSubmit}=_ref;const[selectedFile,setSelectedFile]=useState(null);const[error,setError]=useState('');const handleFileChange=e=>{setSelectedFile(e.target.files[0]);};const handleSubmit=async e=>{e.preventDefault();const formData=new FormData();formData.append('file',selectedFile);try{const response=await axios.post('http://127.0.0.1:8000/predict/',formData,{headers:{'Content-Type':'multipart/form-data'}});setPrediction(response.data.prediction);setImage(\"data:image/png;base64,\".concat(response.data.image));setResize(\"data:image/png;base64,\".concat(response.data.resize_image));setDraw(\"data:image/png;base64,\".concat(response.data.draw_image));setError('');onFormSubmit();}catch(err){setError('Failed to fetch prediction. Please try again.');}};return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formFile\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Upload Image\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",onChange:handleFileChange})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Confirm\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mt-3\",children:error})]});};export default UploadForm;","map":{"version":3,"names":["React","useState","Form","Button","Alert","axios","jsx","_jsx","jsxs","_jsxs","UploadForm","_ref","setPrediction","setImage","setResize","setDraw","onFormSubmit","selectedFile","setSelectedFile","error","setError","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","prediction","concat","image","resize_image","draw_image","err","onSubmit","children","Group","controlId","className","Label","Control","type","onChange","variant"],"sources":["C:/Users/thuyl/OneDrive - Trường ĐH CNTT - University of Information Technology/My documents/AI/ai-project/src/frontend/components/form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = ({ setPrediction, setImage, setResize, setDraw, onFormSubmit }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/predict/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            setPrediction(response.data.prediction);\r\n            setImage(`data:image/png;base64,${response.data.image}`);\r\n            setResize(`data:image/png;base64,${response.data.resize_image}`);\r\n            setDraw(`data:image/png;base64,${response.data.draw_image}`);\r\n            setError('');\r\n            onFormSubmit()\r\n        } catch (err) {\r\n            setError('Failed to fetch prediction. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                <Form.Label>Upload Image</Form.Label>\r\n                <Form.Control type=\"file\" onChange={handleFileChange} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n            </Button>\r\n            {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,MAAM,CAAEC,KAAK,KAAQ,iBAAiB,CACrD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAmE,IAAlE,CAAEC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,YAAa,CAAC,CAAAL,IAAA,CAC7E,KAAM,CAACM,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAoB,gBAAgB,CAAIC,CAAC,EAAK,CAC5BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAC,EAAK,CAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEZ,YAAY,CAAC,CAErC,GAAI,CACA,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAzB,KAAK,CAAC0B,IAAI,CAAC,gCAAgC,CAAEJ,QAAQ,CAAE,CAC1EK,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CACFpB,aAAa,CAACkB,QAAQ,CAACG,IAAI,CAACC,UAAU,CAAC,CACvCrB,QAAQ,0BAAAsB,MAAA,CAA0BL,QAAQ,CAACG,IAAI,CAACG,KAAK,CAAE,CAAC,CACxDtB,SAAS,0BAAAqB,MAAA,CAA0BL,QAAQ,CAACG,IAAI,CAACI,YAAY,CAAE,CAAC,CAChEtB,OAAO,0BAAAoB,MAAA,CAA0BL,QAAQ,CAACG,IAAI,CAACK,UAAU,CAAE,CAAC,CAC5DlB,QAAQ,CAAC,EAAE,CAAC,CACZJ,YAAY,CAAC,CAAC,CAClB,CAAE,MAAOuB,GAAG,CAAE,CACVnB,QAAQ,CAAC,+CAA+C,CAAC,CAC7D,CACJ,CAAC,CAED,mBACIX,KAAA,CAACP,IAAI,EAACsC,QAAQ,CAAEf,YAAa,CAAAgB,QAAA,eACzBhC,KAAA,CAACP,IAAI,CAACwC,KAAK,EAACC,SAAS,CAAC,UAAU,CAACC,SAAS,CAAC,MAAM,CAAAH,QAAA,eAC7ClC,IAAA,CAACL,IAAI,CAAC2C,KAAK,EAAAJ,QAAA,CAAC,cAAY,CAAY,CAAC,cACrClC,IAAA,CAACL,IAAI,CAAC4C,OAAO,EAACC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAE3B,gBAAiB,CAAE,CAAC,EAChD,CAAC,cACbd,IAAA,CAACJ,MAAM,EAAC8C,OAAO,CAAC,SAAS,CAACF,IAAI,CAAC,QAAQ,CAAAN,QAAA,CAAC,SAExC,CAAQ,CAAC,CACRtB,KAAK,eAAIZ,IAAA,CAACH,KAAK,EAAC6C,OAAO,CAAC,QAAQ,CAACL,SAAS,CAAC,MAAM,CAAAH,QAAA,CAAEtB,KAAK,CAAQ,CAAC,EAChE,CAAC,CAEf,CAAC,CAED,cAAe,CAAAT,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}