{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { TableBody } from './TableBody.mjs';\nimport { TableCell } from './TableCell.mjs';\nimport { TableContext } from './TableContext.mjs';\nimport { TableHead } from './TableHead.mjs';\nimport { TableHeadCell } from './TableHeadCell.mjs';\nimport { TableRow } from './TableRow.mjs';\nconst TableComponent = forwardRef(({\n  children,\n  className,\n  striped,\n  hoverable,\n  theme: customTheme = {},\n  ...props\n}, ref) => {\n  const theme = mergeDeep(getTheme().table, customTheme);\n  return /* @__PURE__ */jsx(\"div\", {\n    \"data-testid\": \"table-element\",\n    className: twMerge(theme.root.wrapper),\n    children: /* @__PURE__ */jsxs(TableContext.Provider, {\n      value: {\n        theme,\n        striped,\n        hoverable\n      },\n      children: [/* @__PURE__ */jsx(\"div\", {\n        className: twMerge(theme.root.shadow, className)\n      }), /* @__PURE__ */jsx(\"table\", {\n        className: twMerge(theme.root.base, className),\n        ...props,\n        ref,\n        children\n      })]\n    })\n  });\n});\nTableComponent.displayName = \"Table\";\nconst Table = Object.assign(TableComponent, {\n  Head: TableHead,\n  Body: TableBody,\n  Row: TableRow,\n  Cell: TableCell,\n  HeadCell: TableHeadCell\n});\nexport { Table };","map":{"version":3,"names":["TableComponent","forwardRef","children","className","striped","hoverable","theme","customTheme","props","ref","mergeDeep","getTheme","table","jsx","twMerge","root","wrapper","jsxs","TableContext","Provider","value","shadow","base","displayName","Table","Object","assign","Head","TableHead","Body","TableBody","Row","TableRow","Cell","TableCell","HeadCell","TableHeadCell"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Table\\Table.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentPropsWithRef } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { TableBody, type FlowbiteTableBodyTheme } from \"./TableBody\";\nimport { TableCell } from \"./TableCell\";\nimport { TableContext } from \"./TableContext\";\nimport { TableHead, type FlowbiteTableHeadTheme } from \"./TableHead\";\nimport { TableHeadCell } from \"./TableHeadCell\";\nimport { TableRow, type FlowbiteTableRowTheme } from \"./TableRow\";\n\nexport interface FlowbiteTableTheme {\n  root: FlowbiteTableRootTheme;\n  head: FlowbiteTableHeadTheme;\n  row: FlowbiteTableRowTheme;\n  body: FlowbiteTableBodyTheme;\n}\n\nexport interface FlowbiteTableRootTheme {\n  base: string;\n  shadow: string;\n  wrapper: string;\n}\n\nexport interface TableProps extends ComponentPropsWithRef<\"table\"> {\n  striped?: boolean;\n  hoverable?: boolean;\n  theme?: DeepPartial<FlowbiteTableTheme>;\n}\n\nconst TableComponent = forwardRef<HTMLTableElement, TableProps>(\n  ({ children, className, striped, hoverable, theme: customTheme = {}, ...props }, ref) => {\n    const theme = mergeDeep(getTheme().table, customTheme);\n\n    return (\n      <div data-testid=\"table-element\" className={twMerge(theme.root.wrapper)}>\n        <TableContext.Provider value={{ theme, striped, hoverable }}>\n          <div className={twMerge(theme.root.shadow, className)}></div>\n          <table className={twMerge(theme.root.base, className)} {...props} ref={ref}>\n            {children}\n          </table>\n        </TableContext.Provider>\n      </div>\n    );\n  },\n);\n\nTableComponent.displayName = \"Table\";\n\nexport const Table = Object.assign(TableComponent, {\n  Head: TableHead,\n  Body: TableBody,\n  Row: TableRow,\n  Cell: TableCell,\n  HeadCell: TableHeadCell,\n});\n"],"mappings":";;;;;;;;;;;;;AAcA,MAAKA,cAAU,GAAAC,UAAkB,CACjC;EAAIC,QAAM;EAAKC,SAAG;EAAAC,OAAU;EAAAC,SAAgB;EAAEC,KAAA,EAAAC,WAAa;EAAA,GAAAC;AAAA,GAAAC,GAAA;EACvD,MAAAH,KAAA,GAAAI,SAAuB,CAAAC,QAAS,EAAE,CAAAC,KAAE,EAAAL,WAAe;EACvD,sBAA0BM,GAAA,CAAK,KAAI;IAAA,aAAkB,EAAC,eAAW;IAAMV,SAAE,EAAUW,OAAG,CAAAR,KAAA,CAAAS,IAAA,CAAAC,OAAA;IAAAd,QAAA,iBAAAe,IAAA,CAAAC,YAAA,CAAAC,QAAA;MAAAC,KAAA;QAAAd,KAAA;QAAAF,OAAA;QAAAC;MAAA;MAAAH,QAAA,GACtF,eAAsBW,GAAG,CAAC,OAAO;QAAEV,SAAE,EAASW,OAAE,CAAAR,KAAQ,CAAAS,IAAM,CAAAM,MAAS,EAAElB,SAAS;MAAC,CAAE,GAChF,eAAOU,GAAA;QAAAV,SAAA,EAAAW,OAAA,CAAAR,KAAA,CAAAS,IAAA,CAAAO,IAAA,EAAAnB,SAAA;QAAA,GAAAK,KAAA;QAAAC,GAAA;QAAAP;MAAA;IACT;EAAA;AACD,CACF;AACYF,cAAS,CAAAuB,WAAO,GAAO;AACnC,MAAMC,KAAE,GAAAC,MAAS,CAAAC,MAAA,CAAA1B,cAAA;EACf2B,IAAI,EAAEC,SAAS;EACfC,IAAG,EAAEC,SAAQ;EACbC,GAAA,EAAIC,QAAE;EACNC,IAAA,EAAAC,SAAU;EACXC,QAAA,EAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}