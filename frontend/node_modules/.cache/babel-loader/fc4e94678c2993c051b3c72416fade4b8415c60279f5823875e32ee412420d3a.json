{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { HiX } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst Alert = ({\n  additionalContent,\n  children,\n  className,\n  color = \"info\",\n  icon: Icon,\n  onDismiss,\n  rounded = true,\n  theme: customTheme = {},\n  withBorderAccent,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().alert, customTheme);\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: twMerge(theme.base, theme.color[color], rounded && theme.rounded, withBorderAccent && theme.borderAccent, className),\n    role: \"alert\",\n    ...props,\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: theme.wrapper,\n      \"data-testid\": \"flowbite-alert-wrapper\",\n      children: [Icon && /* @__PURE__ */jsx(Icon, {\n        className: theme.icon,\n        \"data-testid\": \"flowbite-alert-icon\"\n      }), /* @__PURE__ */jsx(\"div\", {\n        children\n      }), typeof onDismiss === \"function\" && /* @__PURE__ */jsx(\"button\", {\n        \"aria-label\": \"Dismiss\",\n        className: twMerge(theme.closeButton.base, theme.closeButton.color[color]),\n        onClick: onDismiss,\n        type: \"button\",\n        children: /* @__PURE__ */jsx(HiX, {\n          \"aria-hidden\": true,\n          className: theme.closeButton.icon\n        })\n      })]\n    }), additionalContent && /* @__PURE__ */jsx(\"div\", {\n      children: additionalContent\n    })]\n  });\n};\nAlert.displayName = \"Alert\";\nexport { Alert };","map":{"version":3,"names":["Alert","additionalContent","children","className","color","icon","Icon","onDismiss","rounded","theme","customTheme","withBorderAccent","props","mergeDeep","getTheme","alert","jsxs","twMerge","base","borderAccent","role","wrapper","jsx","closeButton","onClick","type","HiX","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Alert\\Alert.tsx"],"sourcesContent":["import type { ComponentProps, FC, ReactNode } from \"react\";\nimport { HiX } from \"react-icons/hi\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteColors } from \"../Flowbite\";\n\nexport interface FlowbiteAlertTheme {\n  base: string;\n  borderAccent: string;\n  closeButton: FlowbiteAlertCloseButtonTheme;\n  color: FlowbiteColors;\n  icon: string;\n  rounded: string;\n  wrapper: string;\n}\n\nexport interface FlowbiteAlertCloseButtonTheme {\n  base: string;\n  color: FlowbiteColors;\n  icon: string;\n}\n\nexport interface AlertProps extends Omit<ComponentProps<\"div\">, \"color\"> {\n  additionalContent?: ReactNode;\n  color?: keyof FlowbiteColors;\n  icon?: FC<ComponentProps<\"svg\">>;\n  onDismiss?: boolean | (() => void);\n  rounded?: boolean;\n  theme?: DeepPartial<FlowbiteAlertTheme>;\n  withBorderAccent?: boolean;\n}\n\nexport const Alert: FC<AlertProps> = ({\n  additionalContent,\n  children,\n  className,\n  color = \"info\",\n  icon: Icon,\n  onDismiss,\n  rounded = true,\n  theme: customTheme = {},\n  withBorderAccent,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().alert, customTheme);\n\n  return (\n    <div\n      className={twMerge(\n        theme.base,\n        theme.color[color],\n        rounded && theme.rounded,\n        withBorderAccent && theme.borderAccent,\n        className,\n      )}\n      role=\"alert\"\n      {...props}\n    >\n      <div className={theme.wrapper} data-testid=\"flowbite-alert-wrapper\">\n        {Icon && <Icon className={theme.icon} data-testid=\"flowbite-alert-icon\" />}\n        <div>{children}</div>\n        {typeof onDismiss === \"function\" && (\n          <button\n            aria-label=\"Dismiss\"\n            className={twMerge(theme.closeButton.base, theme.closeButton.color[color])}\n            onClick={onDismiss}\n            type=\"button\"\n          >\n            <HiX aria-hidden className={theme.closeButton.icon} />\n          </button>\n        )}\n      </div>\n      {additionalContent && <div>{additionalContent}</div>}\n    </div>\n  );\n};\n\nAlert.displayName = \"Alert\";\n"],"mappings":";;;;;AAMY,MAACA,KAAK,GAAGA,CAAC;EACpBC,iBAAiB;EACjBC,QAAQ;EACRC,SAAS;EACTC,KAAK,GAAG,MAAM;EACdC,IAAI,EAAEC,IAAI;EACVC,SAAS;EACTC,OAAO,GAAG,IAAI;EACdC,KAAK,EAAEC,WAAW,GAAG,EAAE;EACvBC,gBAAgB;EAChB,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMH,KAAK,GAAGI,SAAS,CAACC,QAAQ,EAAE,CAACC,KAAK,EAAEL,WAAW,CAAC;EACtD,sBAAuBM,IAAI,CACzB,KAAK,EACL;IACEb,SAAS,EAAEc,OAAO,CAChBR,KAAK,CAACS,IAAI,EACVT,KAAK,CAACL,KAAK,CAACA,KAAK,CAAC,EAClBI,OAAO,IAAIC,KAAK,CAACD,OAAO,EACxBG,gBAAgB,IAAIF,KAAK,CAACU,YAAY,EACtChB,SACR,CAAO;IACDiB,IAAI,EAAE,OAAO;IACb,GAAGR,KAAK;IACRV,QAAQ,EAAE,CAChB,eAAwBc,IAAI,CAAC,KAAK,EAAE;MAAEb,SAAS,EAAEM,KAAK,CAACY,OAAO;MAAE,aAAa,EAAE,wBAAwB;MAAEnB,QAAQ,EAAE,CACzGI,IAAI,mBAAoBgB,GAAG,CAAChB,IAAI,EAAE;QAAEH,SAAS,EAAEM,KAAK,CAACJ,IAAI;QAAE,aAAa,EAAE;MAAqB,CAAE,CAAC,EAC5G,eAA0BiB,GAAG,CAAC,KAAK,EAAE;QAAEpB;MAAQ,CAAE,CAAC,EACxC,OAAOK,SAAS,KAAK,UAAU,mBAAoBe,GAAG,CACpD,QAAQ,EACR;QACE,YAAY,EAAE,SAAS;QACvBnB,SAAS,EAAEc,OAAO,CAACR,KAAK,CAACc,WAAW,CAACL,IAAI,EAAET,KAAK,CAACc,WAAW,CAACnB,KAAK,CAACA,KAAK,CAAC,CAAC;QAC1EoB,OAAO,EAAEjB,SAAS;QAClBkB,IAAI,EAAE,QAAQ;QACdvB,QAAQ,iBAAkBoB,GAAG,CAACI,GAAG,EAAE;UAAE,aAAa,EAAE,IAAI;UAAEvB,SAAS,EAAEM,KAAK,CAACc,WAAW,CAAClB;QAAI,CAAE;MAC3G,CACA,CAAW;IACF,CAAE,CAAC,EACJJ,iBAAiB,mBAAoBqB,GAAG,CAAC,KAAK,EAAE;MAAEpB,QAAQ,EAAED;IAAiB,CAAE,CAAC;EAExF,CACA,CAAG;AACH;AACAD,KAAK,CAAC2B,WAAW,GAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}