{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { HiChevronLeft, HiChevronRight } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { range } from './helpers.mjs';\nimport { PaginationButton, PaginationNavigation } from './PaginationButton.mjs';\nconst PaginationComponent = ({\n  className,\n  currentPage,\n  layout = \"pagination\",\n  nextLabel = \"Next\",\n  onPageChange,\n  previousLabel = \"Previous\",\n  renderPaginationButton = props2 => /* @__PURE__ */jsx(PaginationButton, {\n    ...props2\n  }),\n  showIcons: showIcon = false,\n  theme: customTheme = {},\n  totalPages,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().pagination, customTheme);\n  const lastPage = Math.min(Math.max(layout === \"pagination\" ? currentPage + 2 : currentPage + 4, 5), totalPages);\n  const firstPage = Math.max(1, lastPage - 4);\n  const goToNextPage = () => {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  };\n  const goToPreviousPage = () => {\n    onPageChange(Math.max(currentPage - 1, 1));\n  };\n  return /* @__PURE__ */jsxs(\"nav\", {\n    className: twMerge(theme.base, className),\n    ...props,\n    children: [layout === \"table\" && /* @__PURE__ */jsxs(\"div\", {\n      className: theme.layout.table.base,\n      children: [\"Showing \", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: firstPage\n      }), \" to\\xA0\", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: lastPage\n      }), \" of\\xA0\", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: totalPages\n      }), \" Entries\"]\n    }), /* @__PURE__ */jsxs(\"ul\", {\n      className: theme.pages.base,\n      children: [/* @__PURE__ */jsx(\"li\", {\n        children: /* @__PURE__ */jsxs(PaginationNavigation, {\n          className: twMerge(theme.pages.previous.base, showIcon && theme.pages.showIcon),\n          onClick: goToPreviousPage,\n          disabled: currentPage === 1,\n          children: [showIcon && /* @__PURE__ */jsx(HiChevronLeft, {\n            \"aria-hidden\": true,\n            className: theme.pages.previous.icon\n          }), previousLabel]\n        })\n      }), layout === \"pagination\" && range(firstPage, lastPage).map(page => /* @__PURE__ */jsx(\"li\", {\n        \"aria-current\": page === currentPage ? \"page\" : void 0,\n        children: renderPaginationButton({\n          className: twMerge(theme.pages.selector.base, currentPage === page && theme.pages.selector.active),\n          active: page === currentPage,\n          onClick: () => onPageChange(page),\n          children: page\n        })\n      }, page)), /* @__PURE__ */jsx(\"li\", {\n        children: /* @__PURE__ */jsxs(PaginationNavigation, {\n          className: twMerge(theme.pages.next.base, showIcon && theme.pages.showIcon),\n          onClick: goToNextPage,\n          disabled: currentPage === totalPages,\n          children: [nextLabel, showIcon && /* @__PURE__ */jsx(HiChevronRight, {\n            \"aria-hidden\": true,\n            className: theme.pages.next.icon\n          })]\n        })\n      })]\n    })]\n  });\n};\nPaginationComponent.displayName = \"Pagination\";\nconst Pagination = Object.assign(PaginationComponent, {\n  Button: PaginationButton\n});\nexport { Pagination };","map":{"version":3,"names":["PaginationComponent","className","currentPage","layout","nextLabel","onPageChange","previousLabel","renderPaginationButton","props2","jsx","PaginationButton","showIcons","showIcon","theme","customTheme","totalPages","props","mergeDeep","getTheme","pagination","lastPage","Math","min","max","firstPage","goToNextPage","goToPreviousPage","jsxs","twMerge","base","children","table","span","pages","PaginationNavigation","previous","onClick","disabled","HiChevronLeft","icon","range","map","page","selector","active","next","HiChevronRight","displayName","Pagination","Object","assign","Button"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Pagination\\Pagination.tsx"],"sourcesContent":["import type { ComponentProps, FC, ReactNode } from \"react\";\nimport { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { range } from \"./helpers\";\nimport type { FlowbitePaginationButtonTheme, PaginationButtonProps } from \"./PaginationButton\";\nimport { PaginationButton, PaginationNavigation } from \"./PaginationButton\";\n\nexport interface FlowbitePaginationTheme {\n  base: string;\n  layout: FlowbitePaginationLayoutTheme;\n  pages: FlowbitePaginationPagesTheme;\n}\n\nexport interface FlowbitePaginationRootTheme {\n  base: string;\n}\n\nexport interface FlowbitePaginationLayoutTheme {\n  table: {\n    base: string;\n    span: string;\n  };\n}\n\nexport interface FlowbitePaginationPagesTheme {\n  base: string;\n  showIcon: string;\n  previous: FlowbitePaginationNavigationTheme;\n  next: FlowbitePaginationNavigationTheme;\n  selector: FlowbitePaginationButtonTheme;\n}\n\nexport interface FlowbitePaginationNavigationTheme {\n  base: string;\n  icon: string;\n}\n\nexport interface PaginationProps extends ComponentProps<\"nav\"> {\n  currentPage: number;\n  layout?: \"navigation\" | \"pagination\" | \"table\";\n  nextLabel?: string;\n  onPageChange: (page: number) => void;\n  previousLabel?: string;\n  renderPaginationButton?: (props: PaginationButtonProps) => ReactNode;\n  showIcons?: boolean;\n  theme?: DeepPartial<FlowbitePaginationTheme>;\n  totalPages: number;\n}\n\nconst PaginationComponent: FC<PaginationProps> = ({\n  className,\n  currentPage,\n  layout = \"pagination\",\n  nextLabel = \"Next\",\n  onPageChange,\n  previousLabel = \"Previous\",\n  renderPaginationButton = (props) => <PaginationButton {...props} />,\n  showIcons: showIcon = false,\n  theme: customTheme = {},\n  totalPages,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().pagination, customTheme);\n\n  const lastPage = Math.min(Math.max(layout === \"pagination\" ? currentPage + 2 : currentPage + 4, 5), totalPages);\n  const firstPage = Math.max(1, lastPage - 4);\n\n  const goToNextPage = (): void => {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  };\n\n  const goToPreviousPage = (): void => {\n    onPageChange(Math.max(currentPage - 1, 1));\n  };\n\n  return (\n    <nav className={twMerge(theme.base, className)} {...props}>\n      {layout === \"table\" && (\n        <div className={theme.layout.table.base}>\n          Showing <span className={theme.layout.table.span}>{firstPage}</span> to&nbsp;\n          <span className={theme.layout.table.span}>{lastPage}</span> of&nbsp;\n          <span className={theme.layout.table.span}>{totalPages}</span> Entries\n        </div>\n      )}\n      <ul className={theme.pages.base}>\n        <li>\n          <PaginationNavigation\n            className={twMerge(theme.pages.previous.base, showIcon && theme.pages.showIcon)}\n            onClick={goToPreviousPage}\n            disabled={currentPage === 1}\n          >\n            {showIcon && <HiChevronLeft aria-hidden className={theme.pages.previous.icon} />}\n            {previousLabel}\n          </PaginationNavigation>\n        </li>\n        {layout === \"pagination\" &&\n          range(firstPage, lastPage).map((page: number) => (\n            <li aria-current={page === currentPage ? \"page\" : undefined} key={page}>\n              {renderPaginationButton({\n                className: twMerge(theme.pages.selector.base, currentPage === page && theme.pages.selector.active),\n                active: page === currentPage,\n                onClick: () => onPageChange(page),\n                children: page,\n              })}\n            </li>\n          ))}\n        <li>\n          <PaginationNavigation\n            className={twMerge(theme.pages.next.base, showIcon && theme.pages.showIcon)}\n            onClick={goToNextPage}\n            disabled={currentPage === totalPages}\n          >\n            {nextLabel}\n            {showIcon && <HiChevronRight aria-hidden className={theme.pages.next.icon} />}\n          </PaginationNavigation>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPaginationComponent.displayName = \"Pagination\";\n\nexport const Pagination = Object.assign(PaginationComponent, {\n  Button: PaginationButton,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}