{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { TimelineBody } from './TimelineBody.mjs';\nimport { TimelineContent } from './TimelineContent.mjs';\nimport { TimelineContext } from './TimelineContext.mjs';\nimport { TimelineItem } from './TimelineItem.mjs';\nimport { TimelinePoint } from './TimelinePoint.mjs';\nimport { TimelineTime } from './TimelineTime.mjs';\nimport { TimelineTitle } from './TimelineTitle.mjs';\nconst TimelineComponent = ({\n  children,\n  className,\n  horizontal,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().timeline, customTheme);\n  return /* @__PURE__ */jsx(TimelineContext.Provider, {\n    value: {\n      theme,\n      horizontal\n    },\n    children: /* @__PURE__ */jsx(\"ol\", {\n      \"data-testid\": \"timeline-component\",\n      className: twMerge(horizontal && theme.root.direction.horizontal, !horizontal && theme.root.direction.vertical, className),\n      ...props,\n      children\n    })\n  });\n};\nTimelineComponent.displayName = \"Timeline\";\nTimelineItem.displayName = \"Timeline.Item\";\nTimelinePoint.displayName = \"Timeline.Point\";\nTimelineContent.displayName = \"Timeline.Content\";\nTimelineTime.displayName = \"Timeline.Time\";\nTimelineTitle.displayName = \"Timeline.Title\";\nTimelineBody.displayName = \"Timeline.Body\";\nconst Timeline = Object.assign(TimelineComponent, {\n  Item: TimelineItem,\n  Point: TimelinePoint,\n  Content: TimelineContent,\n  Time: TimelineTime,\n  Title: TimelineTitle,\n  Body: TimelineBody\n});\nexport { Timeline };","map":{"version":3,"names":["TimelineComponent","children","className","horizontal","theme","customTheme","props","mergeDeep","getTheme","timeline","jsx","TimelineContext","Provider","value","twMerge","root","direction","vertical","displayName","TimelineItem","TimelinePoint","TimelineContent","TimelineTime","TimelineTitle","TimelineBody","Timeline","Object","assign","Item","Point","Content","Time","Title","Body"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Timeline\\Timeline.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { TimelineBody } from \"./TimelineBody\";\nimport { TimelineContent } from \"./TimelineContent\";\nimport { TimelineContext } from \"./TimelineContext\";\nimport { TimelineItem, type FlowbiteTimelineItemTheme } from \"./TimelineItem\";\nimport { TimelinePoint } from \"./TimelinePoint\";\nimport { TimelineTime } from \"./TimelineTime\";\nimport { TimelineTitle } from \"./TimelineTitle\";\n\nexport interface FlowbiteTimelineTheme {\n  root: {\n    direction: {\n      horizontal: string;\n      vertical: string;\n    };\n  };\n  item: FlowbiteTimelineItemTheme;\n}\n\nexport interface TimelineProps extends ComponentProps<\"ol\"> {\n  horizontal?: boolean;\n  theme?: DeepPartial<FlowbiteTimelineTheme>;\n}\n\nconst TimelineComponent: FC<TimelineProps> = ({\n  children,\n  className,\n  horizontal,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().timeline, customTheme);\n\n  return (\n    <TimelineContext.Provider value={{ theme, horizontal }}>\n      <ol\n        data-testid=\"timeline-component\"\n        className={twMerge(\n          horizontal && theme.root.direction.horizontal,\n          !horizontal && theme.root.direction.vertical,\n          className,\n        )}\n        {...props}\n      >\n        {children}\n      </ol>\n    </TimelineContext.Provider>\n  );\n};\n\nTimelineComponent.displayName = \"Timeline\";\nTimelineItem.displayName = \"Timeline.Item\";\nTimelinePoint.displayName = \"Timeline.Point\";\nTimelineContent.displayName = \"Timeline.Content\";\nTimelineTime.displayName = \"Timeline.Time\";\nTimelineTitle.displayName = \"Timeline.Title\";\nTimelineBody.displayName = \"Timeline.Body\";\n\nexport const Timeline = Object.assign(TimelineComponent, {\n  Item: TimelineItem,\n  Point: TimelinePoint,\n  Content: TimelineContent,\n  Time: TimelineTime,\n  Title: TimelineTitle,\n  Body: TimelineBody,\n});\n"],"mappings":";;;;;;;;;;;;;AAcA,MAAEA,iBAAQ,GAAAA,CAAA;EACRC,QAAA;EACAC,SAAA;EACAC,UAAO;EACPC,KAAG,EAAAC,WAAK;EACT,GAAAC;AACD,MAAE;EACA,MAAAF,KAAA,GAAAG,SAAuB,CAAAC,QAAI,GAAAC,QAAgB,EAAAJ,WAAY;EACzD,OAAQ,eAAAK,GAAA,CAAAC,eAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAT,KAAA;MAAAD;IAAA;IAAAF,QAAA,iBAAAS,GAAA,CACJ,MACJ;MACM,aAAW,sBAAO;MACxBR,SAAQ,EAAAY,OAAc,CACdX,UAAC,IAAUC,KAAI,CAAKW,IAAC,CAAIC,SAAC,CAASb,UAAS,EAC5C,CAAAA,UAAS,IAAAC,KAAA,CAAAW,IAAA,CAAAC,SAAA,CAAAC,QAAA,EACVf,SACD;MACA,GAAAI,KAAQ;MACTL;IACF,CACD;EAAA;AACF;AACAD,iBAAa,CAAAkB,WAAc,aAAe;AAC1CC,YAAA,CAAaD,WAAC,GAAW,eAAG;AAC5BE,aAAA,CAAAF,WAAgB,GAAW,gBAAG;AAC9BG,eAAa,CAAAH,WAAc,qBAAgB;AAC3CI,YAAA,CAAaJ,WAAC,GAAW,eAAG;AAC5BK,aAAa,CAAAL,WAAW,GAAG,gBAAgB;AAC/BM,YAAC,CAAAN,WAAkB,kBAAO;AACtC,MAAMO,QAAE,GAAAC,MAAY,CAAAC,MAAA,CAAA3B,iBAAA;EAClB4B,IAAA,EAAKT,YAAE;EACPU,KAAA,EAAOT,aAAE;EACTU,OAAM,EAAAT,eAAY;EAClBU,IAAA,EAAKT,YAAE;EACPU,KAAI,EAAET,aAAY;EACnBU,IAAA,EAAAT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}