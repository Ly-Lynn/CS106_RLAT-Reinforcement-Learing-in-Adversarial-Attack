{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef, useId } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { Badge } from '../Badge/Badge.mjs';\nimport { Tooltip } from '../Tooltip/Tooltip.mjs';\nimport { useSidebarContext } from './SidebarContext.mjs';\nimport { useSidebarItemContext } from './SidebarItemContext.mjs';\nconst ListItem = _ref => {\n  let {\n    id,\n    theme,\n    isCollapsed,\n    tooltipChildren,\n    children: wrapperChildren,\n    ...props\n  } = _ref;\n  return /* @__PURE__ */jsx(\"li\", {\n    ...props,\n    children: isCollapsed ? /* @__PURE__ */jsx(Tooltip, {\n      content: /* @__PURE__ */jsx(Children, {\n        id,\n        theme,\n        children: tooltipChildren\n      }),\n      placement: \"right\",\n      children: wrapperChildren\n    }) : wrapperChildren\n  });\n};\nconst Children = _ref2 => {\n  let {\n    id,\n    theme,\n    children\n  } = _ref2;\n  return /* @__PURE__ */jsx(\"span\", {\n    \"data-testid\": \"flowbite-sidebar-item-content\",\n    id: \"flowbite-sidebar-item-\".concat(id),\n    className: twMerge(theme.content.base),\n    children\n  });\n};\nconst SidebarItem = forwardRef((_ref3, ref) => {\n  var _theme$collapsed, _theme$icon, _theme$icon2, _theme$collapsed2, _children$charAt$toLo;\n  let {\n    active: isActive,\n    as: Component = \"a\",\n    children,\n    className,\n    icon: Icon,\n    label,\n    labelColor = \"info\",\n    theme: customTheme = {},\n    ...props\n  } = _ref3;\n  const id = useId();\n  const {\n    theme: rootTheme,\n    isCollapsed\n  } = useSidebarContext();\n  const {\n    isInsideCollapse\n  } = useSidebarItemContext();\n  const theme = mergeDeep(rootTheme.item, customTheme);\n  return /* @__PURE__ */jsx(ListItem, {\n    theme,\n    className: theme.listItem,\n    id,\n    isCollapsed,\n    tooltipChildren: children,\n    children: /* @__PURE__ */jsxs(Component, {\n      \"aria-labelledby\": \"flowbite-sidebar-item-\".concat(id),\n      ref,\n      className: twMerge(theme.base, isActive && theme.active, !isCollapsed && isInsideCollapse && ((_theme$collapsed = theme.collapsed) === null || _theme$collapsed === void 0 ? void 0 : _theme$collapsed.insideCollapse), className),\n      ...props,\n      children: [Icon && /* @__PURE__ */jsx(Icon, {\n        \"aria-hidden\": true,\n        \"data-testid\": \"flowbite-sidebar-item-icon\",\n        className: twMerge((_theme$icon = theme.icon) === null || _theme$icon === void 0 ? void 0 : _theme$icon.base, isActive && ((_theme$icon2 = theme.icon) === null || _theme$icon2 === void 0 ? void 0 : _theme$icon2.active))\n      }), isCollapsed && !Icon && /* @__PURE__ */jsx(\"span\", {\n        className: (_theme$collapsed2 = theme.collapsed) === null || _theme$collapsed2 === void 0 ? void 0 : _theme$collapsed2.noIcon,\n        children: (_children$charAt$toLo = children.charAt(0).toLocaleUpperCase()) !== null && _children$charAt$toLo !== void 0 ? _children$charAt$toLo : \"?\"\n      }), !isCollapsed && /* @__PURE__ */jsx(Children, {\n        id,\n        theme,\n        children\n      }), !isCollapsed && label && /* @__PURE__ */jsx(Badge, {\n        color: labelColor,\n        \"data-testid\": \"flowbite-sidebar-label\",\n        hidden: isCollapsed,\n        className: theme.label,\n        children: label\n      })]\n    })\n  });\n});\nSidebarItem.displayName = \"Sidebar.Item\";\nexport { SidebarItem };","map":{"version":3,"names":["ListItem","_ref","id","theme","isCollapsed","tooltipChildren","children","wrapperChildren","props","jsx","Tooltip","content","Children","placement","_ref2","concat","className","twMerge","base","SidebarItem","forwardRef","_ref3","ref","_theme$collapsed","_theme$icon","_theme$icon2","_theme$collapsed2","_children$charAt$toLo","active","isActive","as","Component","icon","Icon","label","labelColor","customTheme","useId","rootTheme","useSidebarContext","isInsideCollapse","useSidebarItemContext","mergeDeep","item","listItem","jsxs","collapsed","insideCollapse","noIcon","charAt","toLocaleUpperCase","Badge","color","hidden"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Sidebar\\SidebarItem.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, ElementType, FC, PropsWithChildren, ReactNode } from \"react\";\nimport { forwardRef, useId } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport { Badge } from \"../Badge\";\nimport type { FlowbiteColors } from \"../Flowbite\";\nimport { Tooltip } from \"../Tooltip\";\nimport { useSidebarContext } from \"./SidebarContext\";\nimport { useSidebarItemContext } from \"./SidebarItemContext\";\n\nexport interface FlowbiteSidebarItemTheme {\n  active: string;\n  base: string;\n  collapsed: {\n    insideCollapse: string;\n    noIcon: string;\n  };\n  content: {\n    base: string;\n  };\n  icon: {\n    base: string;\n    active: string;\n  };\n  label: string;\n  listItem: string;\n}\n\nexport interface SidebarItemProps extends Omit<ComponentProps<\"div\">, \"ref\">, Record<string, unknown> {\n  active?: boolean;\n  as?: ElementType;\n  href?: string;\n  icon?: FC<ComponentProps<\"svg\">>;\n  label?: string;\n  labelColor?: keyof SidebarItemLabelColors;\n  theme?: DeepPartial<FlowbiteSidebarItemTheme>;\n}\n\nexport interface SidebarItemLabelColors extends Pick<FlowbiteColors, \"gray\"> {\n  [key: string]: string;\n}\n\nconst ListItem: FC<\n  PropsWithChildren<{\n    id: string;\n    theme: FlowbiteSidebarItemTheme;\n    isCollapsed: boolean;\n    tooltipChildren: ReactNode | undefined;\n    className?: string;\n  }>\n> = ({ id, theme, isCollapsed, tooltipChildren, children: wrapperChildren, ...props }) => (\n  <li {...props}>\n    {isCollapsed ? (\n      <Tooltip\n        content={\n          <Children id={id} theme={theme}>\n            {tooltipChildren}\n          </Children>\n        }\n        placement=\"right\"\n      >\n        {wrapperChildren}\n      </Tooltip>\n    ) : (\n      wrapperChildren\n    )}\n  </li>\n);\n\nconst Children: FC<PropsWithChildren<{ id: string; theme: FlowbiteSidebarItemTheme }>> = ({ id, theme, children }) => {\n  return (\n    <span\n      data-testid=\"flowbite-sidebar-item-content\"\n      id={`flowbite-sidebar-item-${id}`}\n      className={twMerge(theme.content.base)}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport const SidebarItem = forwardRef<Element, SidebarItemProps>(\n  (\n    {\n      active: isActive,\n      as: Component = \"a\",\n      children,\n      className,\n      icon: Icon,\n      label,\n      labelColor = \"info\",\n      theme: customTheme = {},\n      ...props\n    },\n    ref,\n  ) => {\n    const id = useId();\n    const { theme: rootTheme, isCollapsed } = useSidebarContext();\n    const { isInsideCollapse } = useSidebarItemContext();\n\n    const theme = mergeDeep(rootTheme.item, customTheme);\n\n    return (\n      <ListItem theme={theme} className={theme.listItem} id={id} isCollapsed={isCollapsed} tooltipChildren={children}>\n        <Component\n          aria-labelledby={`flowbite-sidebar-item-${id}`}\n          ref={ref}\n          className={twMerge(\n            theme.base,\n            isActive && theme.active,\n            !isCollapsed && isInsideCollapse && theme.collapsed?.insideCollapse,\n            className,\n          )}\n          {...props}\n        >\n          {Icon && (\n            <Icon\n              aria-hidden\n              data-testid=\"flowbite-sidebar-item-icon\"\n              className={twMerge(theme.icon?.base, isActive && theme.icon?.active)}\n            />\n          )}\n          {isCollapsed && !Icon && (\n            <span className={theme.collapsed?.noIcon}>{(children as string).charAt(0).toLocaleUpperCase() ?? \"?\"}</span>\n          )}\n          {!isCollapsed && (\n            <Children id={id} theme={theme}>\n              {children}\n            </Children>\n          )}\n          {!isCollapsed && label && (\n            <Badge color={labelColor} data-testid=\"flowbite-sidebar-label\" hidden={isCollapsed} className={theme.label}>\n              {label}\n            </Badge>\n          )}\n        </Component>\n      </ListItem>\n    );\n  },\n);\n\nSidebarItem.displayName = \"Sidebar.Item\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}