{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { useDropdownContext } from './DropdownContext.mjs';\nconst DropdownDivider = ({\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const {\n    theme: rootTheme\n  } = useDropdownContext();\n  const theme = customTheme.divider ?? rootTheme.floating.divider;\n  return /* @__PURE__ */jsx(\"div\", {\n    className: twMerge(theme, className),\n    ...props\n  });\n};\nexport { DropdownDivider };","map":{"version":3,"names":["DropdownDivider","className","theme","customTheme","props","rootTheme","useDropdownContext","divider","floating","jsx","twMerge"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Dropdown\\DropdownDivider.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport type { DeepPartial } from \"../../types\";\nimport { useDropdownContext } from \"./DropdownContext\";\n\nexport interface FlowbiteDropdownDividerTheme {\n  divider: string;\n}\n\nexport type DropdownDividerProps = {\n  theme?: DeepPartial<FlowbiteDropdownDividerTheme>;\n} & ComponentProps<\"div\">;\n\nexport const DropdownDivider: FC<DropdownDividerProps> = ({ className, theme: customTheme = {}, ...props }) => {\n  const { theme: rootTheme } = useDropdownContext();\n\n  const theme = customTheme.divider ?? rootTheme.floating.divider;\n\n  return <div className={twMerge(theme, className)} {...props} />;\n};\n"],"mappings":";;;;;AAMA,MAAEA,eAAe,GAAAA,CAAA;EAASC,SAAK;EAAAC,KAAA,EAAAC,WAAqB;EAAA,GAAAC;AAAA;EAClD,MAAM;IAAAF,KAAK,EAAGG;EAAW,CAAC,GAAAC,kBAAqB;EAC/C,MAAAJ,KAAA,GAAAC,WAAuB,CAAGI,OAAM,IAAIF,SAAS,CAAEG,QAAQ,CAAAD,OAAO;EAChE,sBAAAE,GAAA;IAAAR,SAAA,EAAAS,OAAA,CAAAR,KAAA,EAAAD,SAAA;IAAA,GAAAG;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}