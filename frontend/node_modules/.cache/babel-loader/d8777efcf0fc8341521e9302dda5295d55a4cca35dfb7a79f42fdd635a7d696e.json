{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { HiStar } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useRatingContext } from './RatingContext.mjs';\nconst RatingStar = ({\n  className,\n  filled = true,\n  starIcon: Icon = HiStar,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const {\n    theme: rootTheme,\n    size = \"sm\"\n  } = useRatingContext();\n  const theme = mergeDeep(rootTheme.star, customTheme);\n  return /* @__PURE__ */jsx(Icon, {\n    \"data-testid\": \"flowbite-rating-star\",\n    className: twMerge(theme.sizes[size], theme[filled ? \"filled\" : \"empty\"], className),\n    ...props\n  });\n};\nexport { RatingStar };","map":{"version":3,"names":["RatingStar","className","filled","starIcon","Icon","HiStar","theme","customTheme","props","rootTheme","size","useRatingContext","mergeDeep","star","jsx","twMerge","sizes"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Rating\\RatingStar.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { HiStar } from \"react-icons/hi\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteSizes } from \"../Flowbite\";\nimport { useRatingContext } from \"./RatingContext\";\n\nexport interface FlowbiteRatingStarTheme {\n  empty: string;\n  filled: string;\n  sizes: FlowbiteStarSizes;\n}\n\nexport interface FlowbiteStarSizes extends Pick<FlowbiteSizes, \"sm\" | \"md\" | \"lg\"> {\n  [key: string]: string;\n}\n\nexport interface RatingStarProps extends ComponentProps<\"svg\"> {\n  filled?: boolean;\n  starIcon?: FC<ComponentProps<\"svg\">>;\n  theme?: DeepPartial<FlowbiteRatingStarTheme>;\n}\n\nexport const RatingStar: FC<RatingStarProps> = ({\n  className,\n  filled = true,\n  starIcon: Icon = HiStar,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { theme: rootTheme, size = \"sm\" } = useRatingContext();\n\n  const theme = mergeDeep(rootTheme.star, customTheme);\n\n  return (\n    <Icon\n      data-testid=\"flowbite-rating-star\"\n      className={twMerge(theme.sizes[size], theme[filled ? \"filled\" : \"empty\"], className)}\n      {...props}\n    />\n  );\n};\n"],"mappings":";;;;;;;AAQA,MAAEA,UAAS,GAAAA,CAAA;EACTC,SAAS;EACTC,MAAA,GAAQ,IAAE;EACVC,QAAO,EAAAC,IAAA,GAAAC,MAAgB;EACvBC,KAAG,EAAAC,WAAK;EACT,GAAAC;AACD,MAAE;EACA,MAAM;IAAAF,KAAK,EAAGG,SAAU;IAAAC,IAAA,GAAS;EAAK,IAAEC,gBAAa;EACrD,MAAAL,KAAA,GAAAM,SAAuB,CAAAH,SAAG,CAAAI,IAAA,EAAAN,WAAA;EAC5B,OAAQ,eAAAO,GAAA,CACJV,IAAA,EACJ;IACM,aAAW,wBAAyB;IACpCH,SAAQ,EAAAc,OAAA,CAAAT,KAAA,CAAAU,KAAA,CAAAN,IAAA,GAAAJ,KAAA,CAAAJ,MAAA,wBAAAD,SAAA;IACT,GAAAO;EACD,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}