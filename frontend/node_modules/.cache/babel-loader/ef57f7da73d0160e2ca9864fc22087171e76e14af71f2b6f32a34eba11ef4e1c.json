{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../../helpers/merge-deep.mjs';\nimport { useDatePickerContext } from '../DatepickerContext.mjs';\nimport { startOfYearPeriod, isDateEqual, isDateInRange, Views } from '../helpers.mjs';\nconst DatepickerViewsYears = ({\n  theme: customTheme = {}\n}) => {\n  const {\n    theme: rootTheme,\n    selectedDate,\n    minDate,\n    maxDate,\n    viewDate,\n    setViewDate,\n    setView\n  } = useDatePickerContext();\n  const theme = mergeDeep(rootTheme.views.years, customTheme);\n  return /* @__PURE__ */jsx(\"div\", {\n    className: theme.items.base,\n    children: [...Array(12)].map((_year, index) => {\n      const first = startOfYearPeriod(viewDate, 10);\n      const year = first - 1 + index * 1;\n      const newDate = new Date(viewDate.getTime());\n      newDate.setFullYear(year);\n      const isSelected = isDateEqual(selectedDate, newDate);\n      const isDisabled = !isDateInRange(newDate, minDate, maxDate);\n      return /* @__PURE__ */jsx(\"button\", {\n        disabled: isDisabled,\n        type: \"button\",\n        className: twMerge(theme.items.item.base, isSelected && theme.items.item.selected, isDisabled && theme.items.item.disabled),\n        onClick: () => {\n          if (isDisabled) return;\n          setViewDate(newDate);\n          setView(Views.Months);\n        },\n        children: year\n      }, index);\n    })\n  });\n};\nexport { DatepickerViewsYears };","map":{"version":3,"names":["DatepickerViewsYears","theme","customTheme","rootTheme","selectedDate","minDate","maxDate","viewDate","setViewDate","setView","useDatePickerContext","mergeDeep","views","years","jsx","className","items","base","children","Array","map","_year","index","first","startOfYearPeriod","year","newDate","Date","getTime","setFullYear","isSelected","isDateEqual","isDisabled","isDateInRange","disabled","type","twMerge","item","selected","onClick","Views","Months"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Datepicker\\Views\\Years.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../../helpers/merge-deep\";\nimport { useDatePickerContext } from \"../DatepickerContext\";\nimport { isDateEqual, isDateInRange, startOfYearPeriod, Views } from \"../helpers\";\n\nexport interface FlowbiteDatepickerViewsYearsTheme {\n  items: {\n    base: string;\n    item: {\n      base: string;\n      disabled: string;\n      selected: string;\n    };\n  };\n}\n\nexport interface DatepickerViewsYearsProps {\n  theme?: FlowbiteDatepickerViewsYearsTheme;\n}\n\nexport const DatepickerViewsYears: FC<DatepickerViewsYearsProps> = ({ theme: customTheme = {} }) => {\n  const { theme: rootTheme, selectedDate, minDate, maxDate, viewDate, setViewDate, setView } = useDatePickerContext();\n\n  const theme = mergeDeep(rootTheme.views.years, customTheme);\n\n  return (\n    <div className={theme.items.base}>\n      {[...Array(12)].map((_year, index) => {\n        const first = startOfYearPeriod(viewDate, 10);\n        const year = first - 1 + index * 1;\n        const newDate = new Date(viewDate.getTime());\n        newDate.setFullYear(year);\n\n        const isSelected = isDateEqual(selectedDate, newDate);\n        const isDisabled = !isDateInRange(newDate, minDate, maxDate);\n\n        return (\n          <button\n            disabled={isDisabled}\n            key={index}\n            type=\"button\"\n            className={twMerge(\n              theme.items.item.base,\n              isSelected && theme.items.item.selected,\n              isDisabled && theme.items.item.disabled,\n            )}\n            onClick={() => {\n              if (isDisabled) return;\n\n              setViewDate(newDate);\n              setView(Views.Months);\n            }}\n          >\n            {year}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":";;;;;;;AAQA,MAAEA,oBAAwB,GAAEA,CAAA;EAAAC,KAAA,EAAAC,WAAqB,GAAE;AAAA,MAAS;EAC1D,MAAM;IAAAD,KAAK,EAAGE,SAAU;IAAAC,YAAU;IAAMC,OAAO;IAAAC,OAAA;IAAWC,QAAE;IAAAC,WAAA;IAAAC;EAAA,IAAAC,oBAAA;EAC5D,MAAAT,KAAA,GAAAU,SAAuB,CAAAR,SAAS,CAAES,KAAE,CAAAC,KAAS,EAAEX,WAAW,CAAC;EAC7D,OAAI,eAAcY,GAAA,QAAkB;IAAAC,SAAU,EAAGd,KAAC,CAAAe,KAAA,CAAAC,IAAA;IAAAC,QAAA,MAAAC,KAAA,MAAAC,GAAA,EAAAC,KAAA,EAAAC,KAAA;MAC9C,MAAMC,KAAI,GAAGC,iBAAiB,CAAAjB,QAAK;MACnC,MAAMkB,IAAA,GAAOF,KAAG,GAAI,IAAKD,KAAA,GAAQ,CAAC;MAClC,MAAAI,OAAQ,OAAYC,IAAI,CAACpB,QAAC,CAAAqB,OAAA;MAC1BF,OAAM,CAAAG,WAAa,CAAAJ,IAAA;MACnB,MAAMK,UAAU,GAAGC,WAAC,CAAA3B,YAAuB,EAAAsB,OAAS;MACpD,MAAAM,UAAA,IAAAC,aAA0B,CAAAP,OAAA,EAAArB,OAAA,EAAAC,OAAA;MAC9B,OAAM,eAAQQ,GAAA,CACR,UACN;QACQoB,QAAM,EAAAF,UAAQ;QACdG,IAAA,UAAW;QACnBpB,SAAgB,EAAAqB,OAAU,CAChBnC,KAAA,CAAAe,KAAU,CAAAqB,IAAI,CAAApB,IAAM,EACpBa,UAAU,IAAI7B,KAAK,CAACe,KAAK,CAACqB,IAAI,CAACC,QAAQ,EACxCN,UAAA,IAAA/B,KAAA,CAAAe,KAAA,CAAAqB,IAAA,CAAAH,QACD;QACRK,OAAc,EAAAA,CAAA;UACd,IAAYP,UAAO,EACT;UACAxB,WAAQ,CAAAkB,OAAM,CAAM;UACrBjB,OAAA,CAAA+B,KAAA,CAAAC,MAAA;QACD;QACDvB,QAAA,EAAAO;MACD,GACAH,KACF;IACJ;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}