{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useNavbarContext } from './NavbarContext.mjs';\nconst NavbarLink = ({\n  active,\n  as: Component = \"a\",\n  disabled,\n  children,\n  className,\n  theme: customTheme = {},\n  onClick,\n  ...props\n}) => {\n  const {\n    theme: rootTheme,\n    setIsOpen\n  } = useNavbarContext();\n  const theme = mergeDeep(rootTheme.link, customTheme);\n  const handleClick = event => {\n    setIsOpen(false);\n    onClick?.(event);\n  };\n  return /* @__PURE__ */jsx(\"li\", {\n    children: /* @__PURE__ */jsx(Component, {\n      className: twMerge(theme.base, active && theme.active.on, !active && !disabled && theme.active.off, theme.disabled[disabled ? \"on\" : \"off\"], className),\n      onClick: handleClick,\n      ...props,\n      children\n    })\n  });\n};\nexport { NavbarLink };","map":{"version":3,"names":["NavbarLink","active","as","Component","disabled","children","className","theme","customTheme","onClick","props","rootTheme","setIsOpen","useNavbarContext","mergeDeep","link","handleClick","event","jsx","twMerge","base","on","off"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Navbar\\NavbarLink.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, ElementType, FC, MouseEvent } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean } from \"../Flowbite\";\nimport { useNavbarContext } from \"./NavbarContext\";\n\nexport interface FlowbiteNavbarLinkTheme {\n  base: string;\n  active: FlowbiteBoolean;\n  disabled: FlowbiteBoolean;\n}\n\nexport interface NavbarLinkProps extends ComponentProps<\"a\">, Record<string, unknown> {\n  active?: boolean;\n  as?: ElementType;\n  disabled?: boolean;\n  href?: string;\n  theme?: DeepPartial<FlowbiteNavbarLinkTheme>;\n}\n\nexport const NavbarLink: FC<NavbarLinkProps> = ({\n  active,\n  as: Component = \"a\",\n  disabled,\n  children,\n  className,\n  theme: customTheme = {},\n  onClick,\n  ...props\n}) => {\n  const { theme: rootTheme, setIsOpen } = useNavbarContext();\n\n  const theme = mergeDeep(rootTheme.link, customTheme);\n\n  const handleClick = (event: MouseEvent<HTMLAnchorElement>) => {\n    setIsOpen(false);\n    onClick?.(event);\n  };\n\n  return (\n    <li>\n      <Component\n        className={twMerge(\n          theme.base,\n          active && theme.active.on,\n          !active && !disabled && theme.active.off,\n          theme.disabled[disabled ? \"on\" : \"off\"],\n          className,\n        )}\n        onClick={handleClick}\n        {...props}\n      >\n        {children}\n      </Component>\n    </li>\n  );\n};\n"],"mappings":";;;;;;AAOA,MAAEA,UAAM,GAAAA,CAAA;EACNC,MAAI;EACJC,EAAA,EAAAC,SAAQ;EACRC,QAAQ;EACRC,QAAA;EACAC,SAAO;EACPC,KAAA,EAAOC,WAAA;EACPC,OAAG;EACJ,GAAAC;AACD,MAAE;EACA,MAAM;IAAAH,KAAK,EAAGI,SAAU;IAAAC;EAAU,IAAMC,gBAAa;EACrD,MAAMN,KAAA,GAAAO,SAAe,CAAAH,SAAU,CAAAI,IAAA,EAAAP,WAAA;EACjC,MAAIQ,WAAe,GAAEC,KAAA;IACjBL,SAAO,CAAG,KAAK,CAAC;IAChBH,OAAA,GAAAQ,KAAA;EACF;EACF,OAAI,eAASC,GAAA;IAAAb,QAAA,iBAAAa,GAAA,CACTf,SAAA,EACJ;MACAG,SAAc,EAAAa,OAAI,CACVZ,KAAA,CAAMa,IAAI,EACVnB,MAAC,IAAMM,KAAK,CAAAN,MAAQ,CAAAoB,EAAI,EACxB,CAAApB,MAAM,KAAAG,QAAS,IAAQG,KAAG,CAAIN,MAAG,CAAAqB,GAAM,EACvCf,KAAA,CAAAH,QAAS,CAAAA,QAAA,kBACVE,SACD;MACAG,OAAG,EAAKO,WAAA;MACR,GAAAN,KAAQ;MACTL;IACF,CACH;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}