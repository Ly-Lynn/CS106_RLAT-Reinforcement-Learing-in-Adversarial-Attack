{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { AvatarGroup } from './AvatarGroup.mjs';\nimport { AvatarGroupCounter } from './AvatarGroupCounter.mjs';\nconst AvatarComponent = ({\n  alt = \"\",\n  bordered = false,\n  children,\n  className,\n  color = \"light\",\n  img,\n  placeholderInitials = \"\",\n  rounded = false,\n  size = \"md\",\n  stacked = false,\n  status,\n  statusPosition = \"top-left\",\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().avatar, customTheme);\n  const imgClassName = twMerge(theme.root.img.base, bordered && theme.root.bordered, bordered && theme.root.color[color], rounded && theme.root.rounded, stacked && theme.root.stacked, theme.root.img.on, theme.root.size[size]);\n  const imgProps = {\n    className: twMerge(imgClassName, theme.root.img.on),\n    \"data-testid\": \"flowbite-avatar-img\"\n  };\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: twMerge(theme.root.base, className),\n    \"data-testid\": \"flowbite-avatar\",\n    ...props,\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: \"relative\",\n      children: [img ? typeof img === \"string\" ? /* @__PURE__ */jsx(\"img\", {\n        alt,\n        src: img,\n        ...imgProps\n      }) : img({\n        alt,\n        ...imgProps\n      }) : placeholderInitials ? /* @__PURE__ */jsx(\"div\", {\n        className: twMerge(theme.root.img.off, theme.root.initials.base, stacked && theme.root.stacked, bordered && theme.root.bordered, bordered && theme.root.color[color], theme.root.size[size], rounded && theme.root.rounded),\n        \"data-testid\": \"flowbite-avatar-initials-placeholder\",\n        children: /* @__PURE__ */jsx(\"span\", {\n          className: twMerge(theme.root.initials.text),\n          \"data-testid\": \"flowbite-avatar-initials-placeholder-text\",\n          children: placeholderInitials\n        })\n      }) : /* @__PURE__ */jsx(\"div\", {\n        className: twMerge(imgClassName, theme.root.img.off),\n        \"data-testid\": \"flowbite-avatar-img\",\n        children: /* @__PURE__ */jsx(\"svg\", {\n          className: theme.root.img.placeholder,\n          fill: \"currentColor\",\n          viewBox: \"0 0 20 20\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /* @__PURE__ */jsx(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\",\n            clipRule: \"evenodd\"\n          })\n        })\n      }), status && /* @__PURE__ */jsx(\"span\", {\n        \"data-testid\": \"flowbite-avatar-status\",\n        className: twMerge(theme.root.status.base, theme.root.status[status], theme.root.statusPosition[statusPosition])\n      })]\n    }), children && /* @__PURE__ */jsx(\"div\", {\n      children\n    })]\n  });\n};\nAvatarComponent.displayName = \"Avatar\";\nconst Avatar = Object.assign(AvatarComponent, {\n  Group: AvatarGroup,\n  Counter: AvatarGroupCounter\n});\nexport { Avatar };","map":{"version":3,"names":["AvatarComponent","alt","bordered","children","className","color","img","placeholderInitials","rounded","size","stacked","status","statusPosition","theme","customTheme","props","mergeDeep","getTheme","avatar","imgClassName","twMerge","root","base","on","imgProps","jsxs","jsx","src","off","initials","text","placeholder","fill","viewBox","xmlns","fillRule","d","clipRule","displayName","Avatar","Object","assign","Group","AvatarGroup","Counter","AvatarGroupCounter"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Avatar\\Avatar.tsx"],"sourcesContent":["import type { ComponentProps, FC, ReactElement } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean, FlowbiteColors, FlowbitePositions, FlowbiteSizes } from \"../Flowbite\";\nimport type { FlowbiteAvatarGroupTheme } from \"./AvatarGroup\";\nimport { AvatarGroup } from \"./AvatarGroup\";\nimport type { FlowbiteAvatarGroupCounterTheme } from \"./AvatarGroupCounter\";\nimport { AvatarGroupCounter } from \"./AvatarGroupCounter\";\n\nexport interface FlowbiteAvatarTheme {\n  root: FlowbiteAvatarRootTheme;\n  group: FlowbiteAvatarGroupTheme;\n  groupCounter: FlowbiteAvatarGroupCounterTheme;\n}\n\nexport interface FlowbiteAvatarRootTheme {\n  base: string;\n  bordered: string;\n  color: AvatarColors;\n  img: FlowbiteAvatarImageTheme;\n  initials: FlowbiteAvatarInitialsTheme;\n  rounded: string;\n  size: AvatarSizes;\n  stacked: string;\n  status: FlowbiteAvatarStatusTheme;\n  statusPosition: FlowbitePositions;\n}\n\nexport interface FlowbiteAvatarImageTheme extends FlowbiteBoolean {\n  base: string;\n  placeholder: string;\n}\n\nexport interface FlowbiteAvatarStatusTheme {\n  away: string;\n  base: string;\n  busy: string;\n  offline: string;\n  online: string;\n}\n\nexport interface FlowbiteAvatarInitialsTheme {\n  base: string;\n  text: string;\n}\n\nexport interface AvatarColors\n  extends Pick<FlowbiteColors, \"failure\" | \"gray\" | \"info\" | \"pink\" | \"purple\" | \"success\" | \"warning\"> {\n  [key: string]: string;\n}\n\nexport interface AvatarSizes extends Pick<FlowbiteSizes, \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"> {\n  [key: string]: string;\n}\n\nexport interface AvatarImageProps {\n  alt?: string;\n  className: string;\n  \"data-testid\": string;\n}\n\nexport interface AvatarProps extends Omit<ComponentProps<\"div\">, \"color\"> {\n  alt?: string;\n  bordered?: boolean;\n  img?: string | ((props: AvatarImageProps) => ReactElement);\n  color?: keyof AvatarColors;\n  rounded?: boolean;\n  size?: keyof AvatarSizes;\n  stacked?: boolean;\n  status?: \"away\" | \"busy\" | \"offline\" | \"online\";\n  statusPosition?: keyof FlowbitePositions;\n  placeholderInitials?: string;\n  theme?: DeepPartial<FlowbiteAvatarTheme>;\n}\n\nconst AvatarComponent: FC<AvatarProps> = ({\n  alt = \"\",\n  bordered = false,\n  children,\n  className,\n  color = \"light\",\n  img,\n  placeholderInitials = \"\",\n  rounded = false,\n  size = \"md\",\n  stacked = false,\n  status,\n  statusPosition = \"top-left\",\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().avatar, customTheme);\n\n  const imgClassName = twMerge(\n    theme.root.img.base,\n    bordered && theme.root.bordered,\n    bordered && theme.root.color[color],\n    rounded && theme.root.rounded,\n    stacked && theme.root.stacked,\n    theme.root.img.on,\n    theme.root.size[size],\n  );\n\n  const imgProps = {\n    className: twMerge(imgClassName, theme.root.img.on),\n    \"data-testid\": \"flowbite-avatar-img\",\n  };\n  return (\n    <div className={twMerge(theme.root.base, className)} data-testid=\"flowbite-avatar\" {...props}>\n      <div className=\"relative\">\n        {img ? (\n          typeof img === \"string\" ? (\n            <img alt={alt} src={img} {...imgProps} />\n          ) : (\n            img({ alt, ...imgProps })\n          )\n        ) : placeholderInitials ? (\n          <div\n            className={twMerge(\n              theme.root.img.off,\n              theme.root.initials.base,\n              stacked && theme.root.stacked,\n              bordered && theme.root.bordered,\n              bordered && theme.root.color[color],\n              theme.root.size[size],\n              rounded && theme.root.rounded,\n            )}\n            data-testid=\"flowbite-avatar-initials-placeholder\"\n          >\n            <span className={twMerge(theme.root.initials.text)} data-testid=\"flowbite-avatar-initials-placeholder-text\">\n              {placeholderInitials}\n            </span>\n          </div>\n        ) : (\n          <div className={twMerge(imgClassName, theme.root.img.off)} data-testid=\"flowbite-avatar-img\">\n            <svg\n              className={theme.root.img.placeholder}\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n        )}\n        {status && (\n          <span\n            data-testid=\"flowbite-avatar-status\"\n            className={twMerge(\n              theme.root.status.base,\n              theme.root.status[status],\n              theme.root.statusPosition[statusPosition],\n            )}\n          />\n        )}\n      </div>\n      {children && <div>{children}</div>}\n    </div>\n  );\n};\n\nAvatarComponent.displayName = \"Avatar\";\n\nexport const Avatar = Object.assign(AvatarComponent, {\n  Group: AvatarGroup,\n  Counter: AvatarGroupCounter,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}