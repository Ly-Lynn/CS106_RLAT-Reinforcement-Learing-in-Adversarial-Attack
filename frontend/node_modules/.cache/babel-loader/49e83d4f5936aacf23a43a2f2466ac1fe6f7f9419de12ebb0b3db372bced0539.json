{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useTimelineContext } from './TimelineContext.mjs';\nimport { TimelineItemContext } from './TimelineItemContext.mjs';\nconst TimelineItem = _ref => {\n  let {\n    children,\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const {\n    theme: rootTheme,\n    horizontal\n  } = useTimelineContext();\n  const theme = mergeDeep(rootTheme.item, customTheme);\n  return /* @__PURE__ */jsx(TimelineItemContext.Provider, {\n    value: {\n      theme\n    },\n    children: /* @__PURE__ */jsx(\"li\", {\n      \"data-testid\": \"timeline-item\",\n      className: twMerge(horizontal && theme.root.horizontal, !horizontal && theme.root.vertical, className),\n      ...props,\n      children\n    })\n  });\n};\nexport { TimelineItem };","map":{"version":3,"names":["TimelineItem","_ref","children","className","theme","customTheme","props","rootTheme","horizontal","useTimelineContext","mergeDeep","item","jsx","TimelineItemContext","Provider","value","twMerge","root","vertical"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Timeline\\TimelineItem.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteTimelineContentTheme } from \"./TimelineContent\";\nimport { useTimelineContext } from \"./TimelineContext\";\nimport { TimelineItemContext } from \"./TimelineItemContext\";\nimport type { FlowbiteTimelinePointTheme } from \"./TimelinePoint\";\n\nexport interface FlowbiteTimelineItemTheme {\n  root: {\n    horizontal: string;\n    vertical: string;\n  };\n  content: FlowbiteTimelineContentTheme;\n  point: FlowbiteTimelinePointTheme;\n}\n\nexport interface TimelineItemProps extends ComponentProps<\"li\"> {\n  theme?: DeepPartial<FlowbiteTimelineItemTheme>;\n}\n\nexport const TimelineItem: FC<TimelineItemProps> = ({ children, className, theme: customTheme = {}, ...props }) => {\n  const { theme: rootTheme, horizontal } = useTimelineContext();\n\n  const theme = mergeDeep(rootTheme.item, customTheme);\n\n  return (\n    <TimelineItemContext.Provider value={{ theme }}>\n      <li\n        data-testid=\"timeline-item\"\n        className={twMerge(horizontal && theme.root.horizontal, !horizontal && theme.root.vertical, className)}\n        {...props}\n      >\n        {children}\n      </li>\n    </TimelineItemContext.Provider>\n  );\n};\n"],"mappings":";;;;;;;AAQA,MAAEA,YAAe,GAAAC,IAAA,IAA+C;EAAA,IAA/C;IAAAC,QAAW;IAAAC,SAAe;IAAAC,KAAA,EAAAC,WAAoB,GAAC;IAAA,GAAAC;EAAA,IAAAL,IAAA;EAC9D,MAAM;IAAAG,KAAK,EAAGG,SAAU;IAAAC;EAAU,CAAI,GAAEC,kBAAa;EACrD,MAAAL,KAAA,GAAAM,SAAuB,CAAAH,SAAI,CAAAI,IAAA,EAAAN,WAAoB;EACjD,OAAQ,eAAAO,GAAA,CAAAC,mBAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAX;IAAA;IAAAF,QAAA,iBAAAU,GAAA,CACJ,MACJ;MACM,aAAW,iBAAkB;MAC7BT,SAAQ,EAAAa,OAAA,CAAAR,UAAA,IAAAJ,KAAA,CAAAa,IAAA,CAAAT,UAAA,GAAAA,UAAA,IAAAJ,KAAA,CAAAa,IAAA,CAAAC,QAAA,EAAAf,SAAA;MACR,GAAAG,KAAQ;MACTJ;IACF,CACH;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}