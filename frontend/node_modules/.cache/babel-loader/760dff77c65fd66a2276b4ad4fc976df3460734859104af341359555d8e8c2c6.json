{"ast":null,"code":"import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { HelperText } from '../HelperText/HelperText.mjs';\nconst TextInput = forwardRef(({\n  addon,\n  className,\n  color = \"gray\",\n  helperText,\n  icon: Icon,\n  rightIcon: RightIcon,\n  shadow,\n  sizing = \"md\",\n  theme: customTheme = {},\n  type = \"text\",\n  ...props\n}, ref) => {\n  const theme = mergeDeep(getTheme().textInput, customTheme);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: twMerge(theme.base, className),\n      children: [addon && /* @__PURE__ */jsx(\"span\", {\n        className: theme.addon,\n        children: addon\n      }), /* @__PURE__ */jsxs(\"div\", {\n        className: theme.field.base,\n        children: [Icon && /* @__PURE__ */jsx(\"div\", {\n          className: theme.field.icon.base,\n          children: /* @__PURE__ */jsx(Icon, {\n            className: theme.field.icon.svg\n          })\n        }), RightIcon && /* @__PURE__ */jsx(\"div\", {\n          \"data-testid\": \"right-icon\",\n          className: theme.field.rightIcon.base,\n          children: /* @__PURE__ */jsx(RightIcon, {\n            className: theme.field.rightIcon.svg\n          })\n        }), /* @__PURE__ */jsx(\"input\", {\n          className: twMerge(theme.field.input.base, theme.field.input.colors[color], theme.field.input.sizes[sizing], theme.field.input.withIcon[Icon ? \"on\" : \"off\"], theme.field.input.withRightIcon[RightIcon ? \"on\" : \"off\"], theme.field.input.withAddon[addon ? \"on\" : \"off\"], theme.field.input.withShadow[shadow ? \"on\" : \"off\"]),\n          type,\n          ...props,\n          ref\n        })]\n      })]\n    }), helperText && /* @__PURE__ */jsx(HelperText, {\n      color,\n      children: helperText\n    })]\n  });\n});\nTextInput.displayName = \"TextInput\";\nexport { TextInput };","map":{"version":3,"names":["TextInput","forwardRef","addon","className","color","helperText","icon","Icon","rightIcon","RightIcon","shadow","sizing","theme","customTheme","type","props","ref","mergeDeep","getTheme","textInput","jsxs","Fragment","children","twMerge","base","jsx","field","svg","input","colors","sizes","withIcon","withRightIcon","withAddon","withShadow","HelperText","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\TextInput\\TextInput.tsx"],"sourcesContent":["import type { ComponentProps, FC, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean, FlowbiteColors, FlowbiteSizes } from \"../Flowbite\";\nimport { HelperText } from \"../HelperText\";\n\nexport interface FlowbiteTextInputTheme {\n  base: string;\n  addon: string;\n  field: {\n    base: string;\n    icon: {\n      base: string;\n      svg: string;\n    };\n    rightIcon: {\n      base: string;\n      svg: string;\n    };\n    input: {\n      base: string;\n      sizes: FlowbiteTextInputSizes;\n      colors: FlowbiteTextInputColors;\n      withIcon: FlowbiteBoolean;\n      withRightIcon: FlowbiteBoolean;\n      withAddon: FlowbiteBoolean;\n      withShadow: FlowbiteBoolean;\n    };\n  };\n}\n\nexport interface FlowbiteTextInputColors\n  extends Pick<FlowbiteColors, \"gray\" | \"info\" | \"failure\" | \"warning\" | \"success\"> {\n  [key: string]: string;\n}\n\nexport interface FlowbiteTextInputSizes extends Pick<FlowbiteSizes, \"sm\" | \"md\" | \"lg\"> {\n  [key: string]: string;\n}\n\nexport interface TextInputProps extends Omit<ComponentProps<\"input\">, \"ref\" | \"color\"> {\n  addon?: ReactNode;\n  color?: keyof FlowbiteTextInputColors;\n  helperText?: ReactNode;\n  icon?: FC<ComponentProps<\"svg\">>;\n  rightIcon?: FC<ComponentProps<\"svg\">>;\n  shadow?: boolean;\n  sizing?: keyof FlowbiteTextInputSizes;\n  theme?: DeepPartial<FlowbiteTextInputTheme>;\n}\n\nexport const TextInput = forwardRef<HTMLInputElement, TextInputProps>(\n  (\n    {\n      addon,\n      className,\n      color = \"gray\",\n      helperText,\n      icon: Icon,\n      rightIcon: RightIcon,\n      shadow,\n      sizing = \"md\",\n      theme: customTheme = {},\n      type = \"text\",\n      ...props\n    },\n    ref,\n  ) => {\n    const theme = mergeDeep(getTheme().textInput, customTheme);\n\n    return (\n      <>\n        <div className={twMerge(theme.base, className)}>\n          {addon && <span className={theme.addon}>{addon}</span>}\n          <div className={theme.field.base}>\n            {Icon && (\n              <div className={theme.field.icon.base}>\n                <Icon className={theme.field.icon.svg} />\n              </div>\n            )}\n            {RightIcon && (\n              <div data-testid=\"right-icon\" className={theme.field.rightIcon.base}>\n                <RightIcon className={theme.field.rightIcon.svg} />\n              </div>\n            )}\n            <input\n              className={twMerge(\n                theme.field.input.base,\n                theme.field.input.colors[color],\n                theme.field.input.sizes[sizing],\n                theme.field.input.withIcon[Icon ? \"on\" : \"off\"],\n                theme.field.input.withRightIcon[RightIcon ? \"on\" : \"off\"],\n                theme.field.input.withAddon[addon ? \"on\" : \"off\"],\n                theme.field.input.withShadow[shadow ? \"on\" : \"off\"],\n              )}\n              type={type}\n              {...props}\n              ref={ref}\n            />\n          </div>\n        </div>\n        {helperText && <HelperText color={color}>{helperText}</HelperText>}\n      </>\n    );\n  },\n);\n\nTextInput.displayName = \"TextInput\";\n"],"mappings":";;;;;;AAOY,MAACA,SAAS,GAAGC,UAAU,CACjC,CAAC;EACCC,KAAK;EACLC,SAAS;EACTC,KAAK,GAAG,MAAM;EACdC,UAAU;EACVC,IAAI,EAAEC,IAAI;EACVC,SAAS,EAAEC,SAAS;EACpBC,MAAM;EACNC,MAAM,GAAG,IAAI;EACbC,KAAK,EAAEC,WAAW,GAAG,EAAE;EACvBC,IAAI,GAAG,MAAM;EACb,GAAGC;AACP,CAAG,EAAEC,GAAG,KAAK;EACT,MAAMJ,KAAK,GAAGK,SAAS,CAACC,QAAQ,EAAE,CAACC,SAAS,EAAEN,WAAW,CAAC;EAC1D,sBAAuBO,IAAI,CAACC,QAAQ,EAAE;IAAEC,QAAQ,EAAE,CACtD,eAAsBF,IAAI,CAAC,KAAK,EAAE;MAAEjB,SAAS,EAAEoB,OAAO,CAACX,KAAK,CAACY,IAAI,EAAErB,SAAS,CAAC;MAAEmB,QAAQ,EAAE,CACjFpB,KAAK,mBAAoBuB,GAAG,CAAC,MAAM,EAAE;QAAEtB,SAAS,EAAES,KAAK,CAACV,KAAK;QAAEoB,QAAQ,EAAEpB;MAAK,CAAE,CAAC,EACzF,eAAwBkB,IAAI,CAAC,KAAK,EAAE;QAAEjB,SAAS,EAAES,KAAK,CAACc,KAAK,CAACF,IAAI;QAAEF,QAAQ,EAAE,CACnEf,IAAI,mBAAoBkB,GAAG,CAAC,KAAK,EAAE;UAAEtB,SAAS,EAAES,KAAK,CAACc,KAAK,CAACpB,IAAI,CAACkB,IAAI;UAAEF,QAAQ,iBAAkBG,GAAG,CAAClB,IAAI,EAAE;YAAEJ,SAAS,EAAES,KAAK,CAACc,KAAK,CAACpB,IAAI,CAACqB;UAAG,CAAE;QAAC,CAAE,CAAC,EAClJlB,SAAS,mBAAoBgB,GAAG,CAAC,KAAK,EAAE;UAAE,aAAa,EAAE,YAAY;UAAEtB,SAAS,EAAES,KAAK,CAACc,KAAK,CAAClB,SAAS,CAACgB,IAAI;UAAEF,QAAQ,iBAAkBG,GAAG,CAAChB,SAAS,EAAE;YAAEN,SAAS,EAAES,KAAK,CAACc,KAAK,CAAClB,SAAS,CAACmB;UAAG,CAAE;QAAC,CAAE,CAAC,EAC7M,eAA0BF,GAAG,CACjB,OAAO,EACP;UACEtB,SAAS,EAAEoB,OAAO,CAChBX,KAAK,CAACc,KAAK,CAACE,KAAK,CAACJ,IAAI,EACtBZ,KAAK,CAACc,KAAK,CAACE,KAAK,CAACC,MAAM,CAACzB,KAAK,CAAC,EAC/BQ,KAAK,CAACc,KAAK,CAACE,KAAK,CAACE,KAAK,CAACnB,MAAM,CAAC,EAC/BC,KAAK,CAACc,KAAK,CAACE,KAAK,CAACG,QAAQ,CAACxB,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAC/CK,KAAK,CAACc,KAAK,CAACE,KAAK,CAACI,aAAa,CAACvB,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC,EACzDG,KAAK,CAACc,KAAK,CAACE,KAAK,CAACK,SAAS,CAAC/B,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,EACjDU,KAAK,CAACc,KAAK,CAACE,KAAK,CAACM,UAAU,CAACxB,MAAM,GAAG,IAAI,GAAG,KAAK,CAClE,CAAe;UACDI,IAAI;UACJ,GAAGC,KAAK;UACRC;QACd,CACA,CAAW;MACF,CAAE,CAAC;IACL,CAAE,CAAC,EACJX,UAAU,mBAAoBoB,GAAG,CAACU,UAAU,EAAE;MAAE/B,KAAK;MAAEkB,QAAQ,EAAEjB;IAAU,CAAE,CAAC;EAC/E,CAAE,CAAC;AACR,CACA;AACAL,SAAS,CAACoC,WAAW,GAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}