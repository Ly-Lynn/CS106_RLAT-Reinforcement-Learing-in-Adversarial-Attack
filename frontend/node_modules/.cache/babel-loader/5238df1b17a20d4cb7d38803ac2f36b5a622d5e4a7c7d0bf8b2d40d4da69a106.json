{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { SidebarCollapse } from './SidebarCollapse.mjs';\nimport { SidebarContext } from './SidebarContext.mjs';\nimport { SidebarCTA } from './SidebarCTA.mjs';\nimport { SidebarItem } from './SidebarItem.mjs';\nimport { SidebarItemGroup } from './SidebarItemGroup.mjs';\nimport { SidebarItems } from './SidebarItems.mjs';\nimport { SidebarLogo } from './SidebarLogo.mjs';\nconst SidebarComponent = ({\n  children,\n  as: Component = \"nav\",\n  collapseBehavior = \"collapse\",\n  collapsed: isCollapsed = false,\n  theme: customTheme = {},\n  className,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().sidebar, customTheme);\n  return /* @__PURE__ */jsx(SidebarContext.Provider, {\n    value: {\n      theme,\n      isCollapsed\n    },\n    children: /* @__PURE__ */jsx(Component, {\n      \"aria-label\": \"Sidebar\",\n      hidden: isCollapsed && collapseBehavior === \"hide\",\n      className: twMerge(theme.root.base, theme.root.collapsed[isCollapsed ? \"on\" : \"off\"], className),\n      ...props,\n      children: /* @__PURE__ */jsx(\"div\", {\n        className: theme.root.inner,\n        children\n      })\n    })\n  });\n};\nSidebarComponent.displayName = \"Sidebar\";\nconst Sidebar = Object.assign(SidebarComponent, {\n  Collapse: SidebarCollapse,\n  CTA: SidebarCTA,\n  Item: SidebarItem,\n  Items: SidebarItems,\n  ItemGroup: SidebarItemGroup,\n  Logo: SidebarLogo\n});\nexport { Sidebar };","map":{"version":3,"names":["SidebarComponent","children","as","Component","collapseBehavior","collapsed","isCollapsed","theme","customTheme","className","props","mergeDeep","getTheme","sidebar","jsx","SidebarContext","Provider","value","hidden","twMerge","root","base","inner","displayName","Sidebar","Object","assign","Collapse","SidebarCollapse","CTA","SidebarCTA","Item","SidebarItem","Items","SidebarItems","ItemGroup","SidebarItemGroup","Logo","SidebarLogo"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Sidebar\\Sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, ElementType, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean } from \"../Flowbite\";\nimport { SidebarCollapse, type FlowbiteSidebarCollapseTheme } from \"./SidebarCollapse\";\nimport { SidebarContext } from \"./SidebarContext\";\nimport { SidebarCTA, type FlowbiteSidebarCTATheme } from \"./SidebarCTA\";\nimport { SidebarItem, type FlowbiteSidebarItemTheme } from \"./SidebarItem\";\nimport { SidebarItemGroup, type FlowbiteSidebarItemGroupTheme } from \"./SidebarItemGroup\";\nimport { SidebarItems, type FlowbiteSidebarItemsTheme } from \"./SidebarItems\";\nimport { SidebarLogo, type FlowbiteSidebarLogoTheme } from \"./SidebarLogo\";\n\nexport interface FlowbiteSidebarTheme {\n  root: {\n    base: string;\n    collapsed: FlowbiteBoolean;\n    inner: string;\n  };\n  collapse: FlowbiteSidebarCollapseTheme;\n  cta: FlowbiteSidebarCTATheme;\n  item: FlowbiteSidebarItemTheme;\n  items: FlowbiteSidebarItemsTheme;\n  itemGroup: FlowbiteSidebarItemGroupTheme;\n  logo: FlowbiteSidebarLogoTheme;\n}\n\nexport interface SidebarProps extends ComponentProps<\"div\"> {\n  as?: ElementType;\n  collapseBehavior?: \"collapse\" | \"hide\";\n  collapsed?: boolean;\n  theme?: DeepPartial<FlowbiteSidebarTheme>;\n}\n\nconst SidebarComponent: FC<SidebarProps> = ({\n  children,\n  as: Component = \"nav\",\n  collapseBehavior = \"collapse\",\n  collapsed: isCollapsed = false,\n  theme: customTheme = {},\n  className,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().sidebar, customTheme);\n\n  return (\n    <SidebarContext.Provider value={{ theme, isCollapsed }}>\n      <Component\n        aria-label=\"Sidebar\"\n        hidden={isCollapsed && collapseBehavior === \"hide\"}\n        className={twMerge(theme.root.base, theme.root.collapsed[isCollapsed ? \"on\" : \"off\"], className)}\n        {...props}\n      >\n        <div className={theme.root.inner}>{children}</div>\n      </Component>\n    </SidebarContext.Provider>\n  );\n};\n\nSidebarComponent.displayName = \"Sidebar\";\n\nexport const Sidebar = Object.assign(SidebarComponent, {\n  Collapse: SidebarCollapse,\n  CTA: SidebarCTA,\n  Item: SidebarItem,\n  Items: SidebarItems,\n  ItemGroup: SidebarItemGroup,\n  Logo: SidebarLogo,\n});\n"],"mappings":";;;;;;;;;;;;;AAcA,MAAEA,gBAAQ,GAAAA,CAAA;EACRC,QAAI;EACJC,EAAA,EAAAC,SAAA,GAAgB,KAAG;EACnBC,gBAAW,aAAc;EACzBC,SAAO,EAAAC,WAAc,GAAE;EACvBC,KAAA,EAAAC,WAAS;EACTC,SAAQ;EACT,GAAAC;AACD,MAAE;EACA,MAAAH,KAAA,GAAAI,SAAuB,CAAAC,QAAI,GAAAC,OAAe,EAAAL,WAAY;EACxD,OAAI,eAASM,GAAA,CAAAC,cAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAV,KAAA;MAAAD;IAAA;IAAAL,QAAA,iBAAAa,GAAA,CACTX,SAAA,EACJ;MACM,YAAQ,WAAe;MACvBe,MAAA,EAAAZ,WAAmB,IAAAF,gBAAiB,KAAM,MAAK;MAC/CK,SAAQ,EAAAU,OAAA,CAAAZ,KAAA,CAAAa,IAAA,CAAAC,IAAA,EAAAd,KAAA,CAAAa,IAAA,CAAAf,SAAA,CAAAC,WAAA,kBAAAG,SAAA;MACR,GAAAC,KAAQ;MACTT,QAAA,iBAAAa,GAAA;QAAAL,SAAA,EAAAF,KAAA,CAAAa,IAAA,CAAAE,KAAA;QAAArB;MAAA;IACF,CACD;EAAA;AACF;AACYD,gBAAW,CAAAuB,WAAO,GAAO;AACrC,MAAEC,OAAU,GAAAC,MAAA,CAAAC,MAAe,CAAA1B,gBAAA;EACzB2B,QAAK,EAAAC,eAAU;EACfC,GAAA,EAAIC,UAAE;EACNC,IAAA,EAAKC,WAAE;EACPC,KAAA,EAAAC,YAAW;EACXC,SAAM,EAAAC,gBAAW;EAClBC,IAAA,EAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}