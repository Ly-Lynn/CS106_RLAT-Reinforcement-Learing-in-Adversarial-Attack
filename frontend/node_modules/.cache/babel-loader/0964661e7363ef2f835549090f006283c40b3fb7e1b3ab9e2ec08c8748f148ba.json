{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst HelperText = _ref => {\n  var _ref2;\n  let {\n    children,\n    className,\n    color = \"default\",\n    theme: customTheme = {},\n    value,\n    ...props\n  } = _ref;\n  const theme = mergeDeep(getTheme().helperText, customTheme);\n  return /* @__PURE__ */jsx(\"p\", {\n    className: twMerge(theme.root.base, theme.root.colors[color], className),\n    ...props,\n    children: (_ref2 = value !== null && value !== void 0 ? value : children) !== null && _ref2 !== void 0 ? _ref2 : \"\"\n  });\n};\nHelperText.displayName = \"HelperText\";\nexport { HelperText };","map":{"version":3,"names":["HelperText","_ref","_ref2","children","className","color","theme","customTheme","value","props","mergeDeep","getTheme","helperText","jsx","twMerge","root","base","colors","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\HelperText\\HelperText.tsx"],"sourcesContent":["import type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteColors } from \"../Flowbite\";\n\nexport interface FlowbiteHelperTextTheme {\n  root: FlowbiteHelperTextRootTheme;\n}\n\nexport interface FlowbiteHelperTextRootTheme {\n  base: string;\n  colors: HelperColors;\n}\n\nexport interface HelperColors extends Pick<FlowbiteColors, \"gray\" | \"info\" | \"failure\" | \"warning\" | \"success\"> {\n  [key: string]: string;\n}\n\nexport interface HelperTextProps extends Omit<ComponentProps<\"p\">, \"color\"> {\n  color?: keyof HelperColors;\n  theme?: DeepPartial<FlowbiteHelperTextTheme>;\n  value?: string;\n}\n\nexport const HelperText: FC<HelperTextProps> = ({\n  children,\n  className,\n  color = \"default\",\n  theme: customTheme = {},\n  value,\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().helperText, customTheme);\n\n  return (\n    <p className={twMerge(theme.root.base, theme.root.colors[color], className)} {...props}>\n      {value ?? children ?? \"\"}\n    </p>\n  );\n};\n\nHelperText.displayName = \"HelperText\";\n"],"mappings":";;;;AAKY,MAACA,UAAU,GAAGC,IAAA,IAOpB;EAAA,IAAAC,KAAA;EAAA,IAPqB;IACzBC,QAAQ;IACRC,SAAS;IACTC,KAAK,GAAG,SAAS;IACjBC,KAAK,EAAEC,WAAW,GAAG,EAAE;IACvBC,KAAK;IACL,GAAGC;EACL,CAAC,GAAAR,IAAA;EACC,MAAMK,KAAK,GAAGI,SAAS,CAACC,QAAQ,EAAE,CAACC,UAAU,EAAEL,WAAW,CAAC;EAC3D,sBAAuBM,GAAG,CAAC,GAAG,EAAE;IAAET,SAAS,EAAEU,OAAO,CAACR,KAAK,CAACS,IAAI,CAACC,IAAI,EAAEV,KAAK,CAACS,IAAI,CAACE,MAAM,CAACZ,KAAK,CAAC,EAAED,SAAS,CAAC;IAAE,GAAGK,KAAK;IAAEN,QAAQ,GAAAD,KAAA,GAAEM,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIL,QAAQ,cAAAD,KAAA,cAAAA,KAAA,GAAI;EAAE,CAAE,CAAC;AAC5J;AACAF,UAAU,CAACkB,WAAW,GAAG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}