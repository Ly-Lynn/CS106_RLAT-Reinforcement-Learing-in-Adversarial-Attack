{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { ListItem } from './ListItem.mjs';\nconst ListComponent = ({\n  children,\n  className,\n  unstyled,\n  nested,\n  ordered,\n  horizontal,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().list, customTheme);\n  const Component = ordered ? \"ol\" : \"ul\";\n  return /* @__PURE__ */jsx(Component, {\n    className: twMerge(theme.root.base, theme.root.ordered[ordered ? \"on\" : \"off\"], unstyled && theme.root.unstyled, nested && theme.root.nested, horizontal && theme.root.horizontal, className),\n    ...props,\n    children\n  });\n};\nListComponent.displayName = \"List\";\nListItem.displayName = \"List.Item\";\nconst List = Object.assign(ListComponent, {\n  Item: ListItem\n});\nexport { List };","map":{"version":3,"names":["ListComponent","children","className","unstyled","nested","ordered","horizontal","theme","customTheme","props","mergeDeep","getTheme","list","Component","jsx","twMerge","root","base","displayName","ListItem","List","Object","assign","Item"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\List\\List.tsx"],"sourcesContent":["import type { ComponentProps, FC, PropsWithChildren } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport type { FlowbiteListItemTheme, FlowbiteStateColors } from \"../..\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { ListItem } from \"./ListItem\";\n\nexport interface FlowbiteListTheme {\n  root: FlowbiteListRootTheme;\n  item: FlowbiteListItemTheme;\n}\n\nexport interface FlowbiteListRootTheme {\n  base: string;\n  ordered: {\n    on: string;\n    off: string;\n  };\n  horizontal: string;\n  unstyled: string;\n  nested: string;\n}\n\nexport interface ListColors extends FlowbiteStateColors {\n  [key: string]: string;\n  default: string;\n}\n\nexport interface ListProps extends PropsWithChildren<ComponentProps<\"ul\"> & ComponentProps<\"ol\">> {\n  theme?: DeepPartial<FlowbiteListTheme>;\n  ordered?: boolean;\n  unstyled?: boolean;\n  nested?: boolean;\n  horizontal?: boolean;\n}\n\nconst ListComponent: FC<ListProps> = ({\n  children,\n  className,\n  unstyled,\n  nested,\n  ordered,\n  horizontal,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().list, customTheme);\n  const Component = ordered ? \"ol\" : \"ul\";\n\n  return (\n    <Component\n      className={twMerge(\n        theme.root.base,\n        theme.root.ordered[ordered ? \"on\" : \"off\"],\n        unstyled && theme.root.unstyled,\n        nested && theme.root.nested,\n        horizontal && theme.root.horizontal,\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\n\nListComponent.displayName = \"List\";\nListItem.displayName = \"List.Item\";\n\nexport const List = Object.assign(ListComponent, { Item: ListItem });\n"],"mappings":";;;;;AAMA,MAAMA,aAAa,GAAGA,CAAC;EACrBC,QAAQ;EACRC,SAAS;EACTC,QAAQ;EACRC,MAAM;EACNC,OAAO;EACPC,UAAU;EACVC,KAAK,EAAEC,WAAW,GAAG,EAAE;EACvB,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMF,KAAK,GAAGG,SAAS,CAACC,QAAQ,EAAE,CAACC,IAAI,EAAEJ,WAAW,CAAC;EACrD,MAAMK,SAAS,GAAGR,OAAO,GAAG,IAAI,GAAG,IAAI;EACvC,sBAAuBS,GAAG,CACxBD,SAAS,EACT;IACEX,SAAS,EAAEa,OAAO,CAChBR,KAAK,CAACS,IAAI,CAACC,IAAI,EACfV,KAAK,CAACS,IAAI,CAACX,OAAO,CAACA,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,EAC1CF,QAAQ,IAAII,KAAK,CAACS,IAAI,CAACb,QAAQ,EAC/BC,MAAM,IAAIG,KAAK,CAACS,IAAI,CAACZ,MAAM,EAC3BE,UAAU,IAAIC,KAAK,CAACS,IAAI,CAACV,UAAU,EACnCJ,SACR,CAAO;IACD,GAAGO,KAAK;IACRR;EACN,CACA,CAAG;AACH,CAAC;AACDD,aAAa,CAACkB,WAAW,GAAG,MAAM;AAClCC,QAAQ,CAACD,WAAW,GAAG,WAAW;AACtB,MAACE,IAAI,GAAGC,MAAM,CAACC,MAAM,CAACtB,aAAa,EAAE;EAAEuB,IAAI,EAAEJ;AAAQ,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}