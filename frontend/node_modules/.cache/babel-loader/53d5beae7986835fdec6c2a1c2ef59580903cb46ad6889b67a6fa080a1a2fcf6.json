{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useSidebarContext } from './SidebarContext.mjs';\nconst SidebarCTA = _ref => {\n  let {\n    children,\n    color = \"info\",\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const {\n    theme: rootTheme,\n    isCollapsed\n  } = useSidebarContext();\n  const theme = mergeDeep(rootTheme.cta, customTheme);\n  return /* @__PURE__ */jsx(\"div\", {\n    \"data-testid\": \"sidebar-cta\",\n    hidden: isCollapsed,\n    className: twMerge(theme.base, theme.color[color], className),\n    ...props,\n    children\n  });\n};\nSidebarCTA.displayName = \"Sidebar.CTA\";\nexport { SidebarCTA };","map":{"version":3,"names":["SidebarCTA","_ref","children","color","className","theme","customTheme","props","rootTheme","isCollapsed","useSidebarContext","mergeDeep","cta","jsx","hidden","twMerge","base"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Sidebar\\SidebarCTA.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteColors } from \"../Flowbite\";\nimport { useSidebarContext } from \"./SidebarContext\";\n\nexport interface FlowbiteSidebarCTATheme {\n  base: string;\n  color: FlowbiteSidebarCTAColors;\n}\n\nexport interface SidebarCTAProps extends Omit<ComponentProps<\"div\">, \"color\"> {\n  color?: keyof FlowbiteSidebarCTAColors;\n  theme?: DeepPartial<FlowbiteSidebarCTATheme>;\n}\n\nexport interface FlowbiteSidebarCTAColors\n  extends Pick<\n    FlowbiteColors,\n    \"blue\" | \"dark\" | \"failure\" | \"gray\" | \"green\" | \"light\" | \"purple\" | \"red\" | \"success\" | \"warning\" | \"yellow\"\n  > {\n  [key: string]: string;\n}\n\nexport const SidebarCTA: FC<SidebarCTAProps> = ({\n  children,\n  color = \"info\",\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { theme: rootTheme, isCollapsed } = useSidebarContext();\n\n  const theme = mergeDeep(rootTheme.cta, customTheme);\n\n  return (\n    <div\n      data-testid=\"sidebar-cta\"\n      hidden={isCollapsed}\n      className={twMerge(theme.base, theme.color[color], className)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nSidebarCTA.displayName = \"Sidebar.CTA\";\n"],"mappings":";;;;;;AAOA,MAAEA,UAAQ,GAAAC,IAAA,IAMR;EAAA,IANQ;IACRC,QAAQ;IACRC,KAAA,SAAS;IACTC,SAAO;IACPC,KAAG,EAAAC,WAAK;IACT,GAAAC;EACD,IAAAN,IAAA;EACE,MAAM;IAAAI,KAAK,EAAGG,SAAU;IAAAC;EAAa,CAAE,GAAAC,iBAAa;EACpD,MAAAL,KAAA,GAAAM,SAAuB,CAAAH,SAAG,CAAAI,GAAA,EAAAN,WAAA;EAC5B,OAAS,eAAAO,GAAA,CACL,OACJ;IACM,aAAQ,eAAW;IACnBC,MAAA,EAAAL,WAAmB;IACnBL,SAAQ,EAAAW,OAAA,CAAAV,KAAA,CAAAW,IAAA,EAAAX,KAAA,CAAAF,KAAA,CAAAA,KAAA,GAAAC,SAAA;IACR,GAAAG,KAAQ;IACTL;EACD,CACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}