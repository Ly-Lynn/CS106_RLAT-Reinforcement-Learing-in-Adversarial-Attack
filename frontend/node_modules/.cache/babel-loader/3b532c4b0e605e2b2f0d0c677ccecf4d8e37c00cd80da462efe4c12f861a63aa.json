{"ast":null,"code":"import { cloneDeep } from '../helpers/clone-deep.mjs';\nimport { mergeDeep } from '../helpers/merge-deep.mjs';\nimport { theme } from '../theme.mjs';\nconst store = {\n  theme: cloneDeep(theme)\n};\nfunction setThemeMode(mode) {\n  store.mode = mode;\n}\nfunction getThemeMode() {\n  return store.mode;\n}\nfunction setTheme(theme$1) {\n  if (theme$1) store.theme = mergeDeep(theme, theme$1);\n}\nfunction getTheme() {\n  return cloneDeep(store.theme);\n}\nexport { getTheme, getThemeMode, setTheme, setThemeMode };","map":{"version":3,"names":["store","theme","cloneDeep","setThemeMode","mode","getThemeMode","setTheme","theme$1","mergeDeep","getTheme"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\theme-store\\index.tsx"],"sourcesContent":["import type { CustomFlowbiteTheme, FlowbiteTheme } from \"../components/Flowbite\";\nimport { cloneDeep } from \"../helpers/clone-deep\";\nimport { mergeDeep } from \"../helpers/merge-deep\";\nimport type { ThemeMode } from \"../hooks/use-theme-mode\";\nimport { theme as defaultTheme } from \"../theme\";\n\ninterface ThemeStore {\n  mode?: ThemeMode;\n  theme: FlowbiteTheme;\n}\n\nconst store: ThemeStore = {\n  theme: cloneDeep(defaultTheme),\n};\n\nexport function setThemeMode(mode?: ThemeMode) {\n  store.mode = mode;\n}\n\nexport function getThemeMode(): ThemeMode | undefined {\n  return store.mode;\n}\n\nexport function setTheme(theme?: CustomFlowbiteTheme) {\n  if (theme) store.theme = mergeDeep(defaultTheme, theme);\n}\n\nexport function getTheme(): FlowbiteTheme {\n  return cloneDeep(store.theme);\n}\n"],"mappings":";;;AAIA,MAAMA,KAAK,GAAG;EACZC,KAAK,EAAEC,SAAS,CAACD,KAAY;AAC/B,CAAC;AACM,SAASE,YAAYA,CAACC,IAAI,EAAE;EACjCJ,KAAK,CAACI,IAAI,GAAGA,IAAI;AACnB;AACO,SAASC,YAAYA,CAAA,EAAG;EAC7B,OAAOL,KAAK,CAACI,IAAI;AACnB;AACO,SAASE,QAAQA,CAACC,OAAK,EAAE;EAC9B,IAAIA,OAAK,EACPP,KAAK,CAACC,KAAK,GAAGO,SAAS,CAACP,KAAY,EAAEM,OAAK,CAAC;AAChD;AACO,SAASE,QAAQA,CAAA,EAAG;EACzB,OAAOP,SAAS,CAACF,KAAK,CAACC,KAAK,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}