{"ast":null,"code":"'use client';\n\nimport { createContext, useContext } from 'react';\nconst DatepickerContext = createContext(void 0);\nfunction useDatePickerContext() {\n  const context = useContext(DatepickerContext);\n  if (!context) {\n    throw new Error(\"useDatePickerContext should be used within the DatePickerContext provider!\");\n  }\n  return context;\n}\nexport { DatepickerContext, useDatePickerContext };","map":{"version":3,"names":["DatepickerContext","createContext","useDatePickerContext","context","useContext","Error"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Datepicker\\DatepickerContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext } from \"react\";\nimport type { FlowbiteDatepickerTheme } from \"./Datepicker\";\nimport type { Views, WeekStart } from \"./helpers\";\n\ntype DatepickerContextProps = {\n  theme: FlowbiteDatepickerTheme;\n  language: string;\n  weekStart: WeekStart;\n  minDate?: Date;\n  maxDate?: Date;\n  isOpen?: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  view: Views;\n  setView: (value: Views) => void;\n  selectedDate: Date;\n  setSelectedDate: (date: Date) => void;\n  changeSelectedDate: (date: Date, useAutohide: boolean) => void;\n  viewDate: Date;\n  setViewDate: (date: Date) => void;\n};\n\nexport const DatepickerContext = createContext<DatepickerContextProps | undefined>(undefined);\n\nexport function useDatePickerContext(): DatepickerContextProps {\n  const context = useContext(DatepickerContext);\n\n  if (!context) {\n    throw new Error(\"useDatePickerContext should be used within the DatePickerContext provider!\");\n  }\n\n  return context;\n}\n"],"mappings":";;;AAIO,MAAAA,iBAAS,GAAAC,aAAuB;AACvC,SAAQC,oBAAqBA,CAAA;EAC3B,MAAKC,OAAO,GAAEC,UAAA,CAAAJ,iBAAA;EAChB,IAAI,CAAAG,OAAU;IACX,UAAAE,KAAA;EACD;EACF,OAAAF,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}