{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useTableContext } from './TableContext.mjs';\nimport { TableHeadContext } from './TableHeadContext.mjs';\nconst TableHead = forwardRef(({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}, ref) => {\n  const {\n    theme: rootTheme\n  } = useTableContext();\n  const theme = mergeDeep(rootTheme.head, customTheme);\n  return /* @__PURE__ */jsx(TableHeadContext.Provider, {\n    value: {\n      theme\n    },\n    children: /* @__PURE__ */jsx(\"thead\", {\n      className: twMerge(theme.base, className),\n      ref,\n      ...props,\n      children: /* @__PURE__ */jsx(\"tr\", {\n        children\n      })\n    })\n  });\n});\nTableHead.displayName = \"Table.Head\";\nexport { TableHead };","map":{"version":3,"names":["TableHead","forwardRef","children","className","theme","customTheme","props","ref","rootTheme","useTableContext","mergeDeep","head","jsx","TableHeadContext","Provider","value","twMerge","base"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Table\\TableHead.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentPropsWithRef } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport { useTableContext } from \"./TableContext\";\nimport type { FlowbiteTableHeadCellTheme } from \"./TableHeadCell\";\nimport { TableHeadContext } from \"./TableHeadContext\";\n\nexport interface FlowbiteTableHeadTheme {\n  base: string;\n  cell: FlowbiteTableHeadCellTheme;\n}\n\nexport interface TableHeadProps extends ComponentPropsWithRef<\"thead\"> {\n  theme?: DeepPartial<FlowbiteTableHeadTheme>;\n}\n\nexport const TableHead = forwardRef<HTMLTableSectionElement, TableHeadProps>(\n  ({ children, className, theme: customTheme = {}, ...props }, ref) => {\n    const { theme: rootTheme } = useTableContext();\n\n    const theme = mergeDeep(rootTheme.head, customTheme);\n\n    return (\n      <TableHeadContext.Provider value={{ theme }}>\n        <thead className={twMerge(theme.base, className)} ref={ref} {...props}>\n          <tr>{children}</tr>\n        </thead>\n      </TableHeadContext.Provider>\n    );\n  },\n);\n\nTableHead.displayName = \"Table.Head\";\n"],"mappings":";;;;;;;;AASA,MAAKA,SAAU,GAAAC,UAAW,CAC1B;EAAIC,QAAQ;EAAAC,SAAO;EAAAC,KAAW,EAAGC,WAAA,IAAe;EAAG,GAAAC;AAAA,GAAAC,GAAA;EAC/C,MAAM;IAAAH,KAAK,EAAGI;EAAU,IAAAC,eAAgB;EACxC,MAAAL,KAAA,GAAAM,SAAuB,CAAAF,SAAI,CAAAG,IAAA,EAAAN,WAAiB,CAAQ;EACrD,sBAAAO,GAAA,CAAAC,gBAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAX;IAAA;IAAAF,QAAA,iBAAAU,GAAA;MAAAT,SAAA,EAAAa,OAAA,CAAAZ,KAAA,CAAAa,IAAA,EAAAd,SAAA;MAAAI,GAAA;MAAA,GAAAD,KAAA;MAAAJ,QAAA,iBAAAU,GAAA;QAAAV;MAAA;IAAA;EAAA;AACD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}