{"ast":null,"code":"import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { ThemeInit } from '../../theme-store/init/index.mjs';\nconst Flowbite = _ref => {\n  let {\n    children,\n    theme\n  } = _ref;\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(ThemeInit, {\n      mode: theme === null || theme === void 0 ? void 0 : theme.mode,\n      theme: theme === null || theme === void 0 ? void 0 : theme.theme\n    }), children]\n  });\n};\nFlowbite.displayName = \"Flowbite\";\nexport { Flowbite };","map":{"version":3,"names":["Flowbite","_ref","children","theme","jsxs","Fragment","jsx","ThemeInit","mode","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Flowbite\\Flowbite.tsx"],"sourcesContent":["import type { FC } from \"react\";\nimport type { ThemeMode } from \"../../hooks/use-theme-mode\";\nimport { ThemeInit } from \"../../theme-store/init\";\nimport type { CustomFlowbiteTheme } from \"./FlowbiteTheme\";\n\nexport interface ThemeProps {\n  mode?: ThemeMode;\n  theme?: CustomFlowbiteTheme;\n}\n\ninterface FlowbiteProps {\n  children: React.ReactNode;\n  theme?: ThemeProps;\n}\n\nexport const Flowbite: FC<FlowbiteProps> = ({ children, theme }) => {\n  return (\n    <>\n      <ThemeInit mode={theme?.mode} theme={theme?.theme} />\n      {children}\n    </>\n  );\n};\n\nFlowbite.displayName = \"Flowbite\";\n"],"mappings":";;AAGY,MAACA,QAAQ,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,QAAQ;IAAEC;EAAK,CAAE,GAAAF,IAAA;EAC1C,sBAAuBG,IAAI,CAACC,QAAQ,EAAE;IAAEH,QAAQ,EAAE,CACpD,eAAoBI,GAAG,CAACC,SAAS,EAAE;MAAEC,IAAI,EAAEL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,IAAI;MAAEL,KAAK,EAAEA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA;IAAK,CAAE,CAAC,EAC1ED,QAAQ;EACT,CAAE,CAAC;AACN;AACAF,QAAQ,CAACS,WAAW,GAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}