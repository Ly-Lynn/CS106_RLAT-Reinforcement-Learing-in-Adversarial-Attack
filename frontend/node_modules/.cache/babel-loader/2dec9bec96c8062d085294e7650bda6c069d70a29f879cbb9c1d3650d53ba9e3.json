{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { Floating } from '../Floating/Floating.mjs';\nconst Tooltip = _ref => {\n  let {\n    animation = \"duration-300\",\n    arrow = true,\n    children,\n    className,\n    content,\n    placement = \"top\",\n    style = \"dark\",\n    theme: customTheme = {},\n    trigger = \"hover\",\n    ...props\n  } = _ref;\n  const theme = mergeDeep(getTheme().tooltip, customTheme);\n  return /* @__PURE__ */jsx(Floating, {\n    animation,\n    arrow,\n    content,\n    placement,\n    style,\n    theme,\n    trigger,\n    className,\n    ...props,\n    children\n  });\n};\nTooltip.displayName = \"Tooltip\";\nexport { Tooltip };","map":{"version":3,"names":["Tooltip","_ref","animation","arrow","children","className","content","placement","style","theme","customTheme","trigger","props","mergeDeep","getTheme","tooltip","jsx","Floating","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Tooltip\\Tooltip.tsx"],"sourcesContent":["import type { Placement } from \"@floating-ui/core\";\nimport type { ComponentProps, FC, ReactNode } from \"react\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { Floating, type FlowbiteFloatingTheme } from \"../Floating\";\n\nexport type FlowbiteTooltipTheme = FlowbiteFloatingTheme;\n\nexport interface TooltipProps extends Omit<ComponentProps<\"div\">, \"content\" | \"style\"> {\n  animation?: false | `duration-${number}`;\n  arrow?: boolean;\n  content: ReactNode;\n  placement?: \"auto\" | Placement;\n  style?: \"dark\" | \"light\" | \"auto\";\n  theme?: DeepPartial<FlowbiteTooltipTheme>;\n  trigger?: \"hover\" | \"click\";\n}\n\n/**\n * @see https://floating-ui.com/docs/react-dom-interactions\n */\nexport const Tooltip: FC<TooltipProps> = ({\n  animation = \"duration-300\",\n  arrow = true,\n  children,\n  className,\n  content,\n  placement = \"top\",\n  style = \"dark\",\n  theme: customTheme = {},\n  trigger = \"hover\",\n  ...props\n}) => {\n  const theme = mergeDeep(getTheme().tooltip, customTheme);\n\n  return (\n    <Floating\n      animation={animation}\n      arrow={arrow}\n      content={content}\n      placement={placement}\n      style={style}\n      theme={theme}\n      trigger={trigger}\n      className={className}\n      {...props}\n    >\n      {children}\n    </Floating>\n  );\n};\n\nTooltip.displayName = \"Tooltip\";\n"],"mappings":";;;;AAKY,MAACA,OAAO,GAAGC,IAAA,IAWjB;EAAA,IAXkB;IACtBC,SAAS,GAAG,cAAc;IAC1BC,KAAK,GAAG,IAAI;IACZC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,SAAS,GAAG,KAAK;IACjBC,KAAK,GAAG,MAAM;IACdC,KAAK,EAAEC,WAAW,GAAG,EAAE;IACvBC,OAAO,GAAG,OAAO;IACjB,GAAGC;EACL,CAAC,GAAAX,IAAA;EACC,MAAMQ,KAAK,GAAGI,SAAS,CAACC,QAAQ,EAAE,CAACC,OAAO,EAAEL,WAAW,CAAC;EACxD,sBAAuBM,GAAG,CACxBC,QAAQ,EACR;IACEf,SAAS;IACTC,KAAK;IACLG,OAAO;IACPC,SAAS;IACTC,KAAK;IACLC,KAAK;IACLE,OAAO;IACPN,SAAS;IACT,GAAGO,KAAK;IACRR;EACN,CACA,CAAG;AACH;AACAJ,OAAO,CAACkB,WAAW,GAAG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}