{"ast":null,"code":"'use client';\n\nimport { createContext, useContext } from 'react';\nconst DropdownContext = createContext(void 0);\nfunction useDropdownContext() {\n  const context = useContext(DropdownContext);\n  if (!context) {\n    throw new Error(\"useDropdownContext should be used within the DropdownContext provider!\");\n  }\n  return context;\n}\nexport { DropdownContext, useDropdownContext };","map":{"version":3,"names":["DropdownContext","createContext","useDropdownContext","context","useContext","Error"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Dropdown\\DropdownContext.tsx"],"sourcesContent":["\"use client\";\n\nimport type { useInteractions } from \"@floating-ui/react\";\nimport { createContext, useContext } from \"react\";\nimport type { FlowbiteDropdownTheme } from \"./Dropdown\";\n\ntype DropdownContext = {\n  theme: FlowbiteDropdownTheme;\n  activeIndex: number | null;\n  dismissOnClick?: boolean;\n  getItemProps: ReturnType<typeof useInteractions>[\"getItemProps\"];\n  handleSelect: (index: number | null) => void;\n};\n\nexport const DropdownContext = createContext<DropdownContext | undefined>(undefined);\n\nexport function useDropdownContext(): DropdownContext {\n  const context = useContext(DropdownContext);\n\n  if (!context) {\n    throw new Error(\"useDropdownContext should be used within the DropdownContext provider!\");\n  }\n\n  return context;\n}\n"],"mappings":";;;AAIO,MAAAA,eAAS,GAAAC,aAAqB;AACrC,SAAQC,kBAAUA,CAAA,EAAW;EAC3B,MAAKC,OAAO,GAAEC,UAAA,CAAAJ,eAAA;EAChB,IAAI,CAAAG,OAAU;IACX,UAAAE,KAAA;EACD;EACF,OAAAF,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}