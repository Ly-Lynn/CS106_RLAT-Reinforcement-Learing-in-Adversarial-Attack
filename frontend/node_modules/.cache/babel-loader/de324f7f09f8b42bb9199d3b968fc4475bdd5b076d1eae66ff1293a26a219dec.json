{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { useId, useState, useEffect } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { Tooltip } from '../Tooltip/Tooltip.mjs';\nimport { useSidebarContext } from './SidebarContext.mjs';\nimport { SidebarItemContext } from './SidebarItemContext.mjs';\nconst SidebarCollapse = ({\n  children,\n  className,\n  icon: Icon,\n  label,\n  chevronIcon: ChevronIcon = HiChevronDown,\n  renderChevronIcon,\n  open = false,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const id = useId();\n  const [isOpen, setOpen] = useState(open);\n  const {\n    theme: rootTheme,\n    isCollapsed\n  } = useSidebarContext();\n  const theme = mergeDeep(rootTheme.collapse, customTheme);\n  useEffect(() => setOpen(open), [open]);\n  const Wrapper = ({\n    children: children2\n  }) => /* @__PURE__ */jsx(\"li\", {\n    children: isCollapsed && !isOpen ? /* @__PURE__ */jsx(Tooltip, {\n      content: label,\n      placement: \"right\",\n      children: children2\n    }) : children2\n  });\n  return /* @__PURE__ */jsxs(Wrapper, {\n    children: [/* @__PURE__ */jsxs(\"button\", {\n      id: `flowbite-sidebar-collapse-${id}`,\n      onClick: () => setOpen(!isOpen),\n      title: label,\n      type: \"button\",\n      className: twMerge(theme.button, className),\n      ...props,\n      children: [Icon && /* @__PURE__ */jsx(Icon, {\n        \"aria-hidden\": true,\n        \"data-testid\": \"flowbite-sidebar-collapse-icon\",\n        className: twMerge(theme.icon.base, theme.icon.open[isOpen ? \"on\" : \"off\"])\n      }), isCollapsed ? /* @__PURE__ */jsx(\"span\", {\n        className: \"sr-only\",\n        children: label\n      }) : /* @__PURE__ */jsxs(Fragment, {\n        children: [/* @__PURE__ */jsx(\"span\", {\n          \"data-testid\": \"flowbite-sidebar-collapse-label\",\n          className: theme.label.base,\n          children: label\n        }), renderChevronIcon ? renderChevronIcon(theme, isOpen) : /* @__PURE__ */jsx(ChevronIcon, {\n          \"aria-hidden\": true,\n          className: twMerge(theme.label.icon.base, theme.label.icon.open[isOpen ? \"on\" : \"off\"])\n        })]\n      })]\n    }), /* @__PURE__ */jsx(\"ul\", {\n      \"aria-labelledby\": `flowbite-sidebar-collapse-${id}`,\n      hidden: !isOpen,\n      className: theme.list,\n      children: /* @__PURE__ */jsx(SidebarItemContext.Provider, {\n        value: {\n          isInsideCollapse: true\n        },\n        children\n      })\n    })]\n  });\n};\nSidebarCollapse.displayName = \"Sidebar.Collapse\";\nexport { SidebarCollapse };","map":{"version":3,"names":["SidebarCollapse","children","className","icon","Icon","label","chevronIcon","ChevronIcon","HiChevronDown","renderChevronIcon","open","theme","customTheme","props","id","useId","isOpen","setOpen","useState","rootTheme","isCollapsed","useSidebarContext","mergeDeep","collapse","useEffect","Wrapper","children2","jsx","Tooltip","content","placement","jsxs","onClick","title","type","twMerge","button","base","Fragment","hidden","list","SidebarItemContext","Provider","value","isInsideCollapse"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Sidebar\\SidebarCollapse.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC, PropsWithChildren, ReactElement } from \"react\";\nimport { useEffect, useId, useState } from \"react\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean } from \"../Flowbite\";\nimport { Tooltip } from \"../Tooltip\";\nimport { useSidebarContext } from \"./SidebarContext\";\nimport type { SidebarItemProps } from \"./SidebarItem\";\nimport { SidebarItemContext } from \"./SidebarItemContext\";\n\nexport interface FlowbiteSidebarCollapseTheme {\n  button: string;\n  icon: {\n    base: string;\n    open: FlowbiteBoolean;\n  };\n  label: {\n    base: string;\n    icon: {\n      base: string;\n      open: FlowbiteBoolean;\n    };\n  };\n  list: string;\n}\n\nexport interface SidebarCollapseProps\n  extends Pick<SidebarItemProps, \"active\" | \"as\" | \"href\" | \"icon\" | \"label\" | \"labelColor\">,\n    ComponentProps<\"button\"> {\n  onClick?: ComponentProps<\"button\">[\"onClick\"];\n  open?: boolean;\n  chevronIcon?: FC<ComponentProps<\"svg\">>;\n  renderChevronIcon?: (theme: FlowbiteSidebarCollapseTheme, open: boolean) => ReactElement;\n  theme?: DeepPartial<FlowbiteSidebarCollapseTheme>;\n}\n\nexport const SidebarCollapse: FC<SidebarCollapseProps> = ({\n  children,\n  className,\n  icon: Icon,\n  label,\n  chevronIcon: ChevronIcon = HiChevronDown,\n  renderChevronIcon,\n  open = false,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const id = useId();\n  const [isOpen, setOpen] = useState(open);\n  const { theme: rootTheme, isCollapsed } = useSidebarContext();\n\n  const theme = mergeDeep(rootTheme.collapse, customTheme);\n\n  useEffect(() => setOpen(open), [open]);\n\n  const Wrapper: FC<PropsWithChildren> = ({ children }) => (\n    <li>\n      {isCollapsed && !isOpen ? (\n        <Tooltip content={label} placement=\"right\">\n          {children}\n        </Tooltip>\n      ) : (\n        children\n      )}\n    </li>\n  );\n\n  return (\n    <Wrapper>\n      <button\n        id={`flowbite-sidebar-collapse-${id}`}\n        onClick={() => setOpen(!isOpen)}\n        title={label}\n        type=\"button\"\n        className={twMerge(theme.button, className)}\n        {...props}\n      >\n        {Icon && (\n          <Icon\n            aria-hidden\n            data-testid=\"flowbite-sidebar-collapse-icon\"\n            className={twMerge(theme.icon.base, theme.icon.open[isOpen ? \"on\" : \"off\"])}\n          />\n        )}\n        {isCollapsed ? (\n          <span className=\"sr-only\">{label}</span>\n        ) : (\n          <>\n            <span data-testid=\"flowbite-sidebar-collapse-label\" className={theme.label.base}>\n              {label}\n            </span>\n            {renderChevronIcon ? (\n              renderChevronIcon(theme, isOpen)\n            ) : (\n              <ChevronIcon\n                aria-hidden\n                className={twMerge(theme.label.icon.base, theme.label.icon.open[isOpen ? \"on\" : \"off\"])}\n              />\n            )}\n          </>\n        )}\n      </button>\n      <ul aria-labelledby={`flowbite-sidebar-collapse-${id}`} hidden={!isOpen} className={theme.list}>\n        <SidebarItemContext.Provider value={{ isInsideCollapse: true }}>{children}</SidebarItemContext.Provider>\n      </ul>\n    </Wrapper>\n  );\n};\n\nSidebarCollapse.displayName = \"Sidebar.Collapse\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,eAAQ,GAAAA,CAAA;EACRC,QAAA;EACAC,SAAM;EACNC,IAAA,EAAKC,IAAA;EACLC,KAAA;EACAC,WAAA,EAAAC,WAAiB,GAAAC,aAAA;EACjBC,iBAAY;EACZC,IAAA,GAAO;EACPC,KAAG,EAAAC,WAAK;EACT,GAAAC;AACD,MAAE;EACA,MAAMC,EAAC,GAAAC,KAAQ;EACf,MAAM,CAAAC,MAAO,EAAEC,OAAA,IAAWC,QAAA,CAAAR,IAAa;EACvC,MAAM;IAAAC,KAAK,EAAGQ,SAAU;IAAAC;EAAU,IAAQC,iBAAe;EACzD,MAAAV,KAAU,GAAAW,SAAa,CAACH,SAAQ,CAAAI,QAAO,EAAAX,WAAA;EACvCY,SAAM,OAAUP,OAAG,CAAAP,IAAQ,CAAE,GAAAA,IAAA,EAAS;EACtC,MAAAe,OAAA,GAAAA,CAAA;IAAAxB,QAA2B,EAACyB;EAAW,qBAAUC,GAAA;IAAA1B,QAAA,EAAAmB,WAAA,KAAAJ,MAAA,kBAAAW,GAAA,CAAAC,OAAA;MAAAC,OAAA,EAAAxB,KAAA;MAAAyB,SAAA;MAAA7B,QAAA,EAAAyB;IAAA,KAAAA;EAAA;EACnD,sBAAwBK,IAAA,CAAAN,OAAA;IAAAxB,QAAA,GACxB,eAAc8B,IAAA,CACR,UACN;MACQjB,EAAA,+BAA+BA,EAAA;MAC/BkB,OAAO,EAAAA,CAAA,KAAKf,OAAA,EAAAD,MAAA;MACZiB,KAAI,EAAE5B,KAAA;MACN6B,IAAA,UAAW;MACXhC,SAAQ,EAAAiC,OAAA,CAAAxB,KAAA,CAAAyB,MAAA,EAAAlC,SAAA;MACR,GAAAW,KAAQ;MAChBZ,QAAc,GACdG,IAAY,IAAI,eAAAuB,GAAA,CACJvB,IAAA,EACZ;QACc,aAAa,EAAE;QACf,aAAW,kCAAoC;QAChDF,SAAA,EAAAiC,OAAA,CAAAxB,KAAA,CAAAR,IAAA,CAAAkC,IAAA,EAAA1B,KAAA,CAAAR,IAAA,CAAAO,IAAA,CAAAM,MAAA;MACF,CACD,GACVI,WAAA,kBAAwCO,GAAE;QAAAzB,SAAe;QAAAD,QAAA,EAAAI;MAAmC,oBAAiB0B,IAAM,CAAAO,QAAM;QAAQrC,QAAS,EAAC,CAC/H,eAAA0B,GAAiB,CAAG;UAAA,aAAuB,EAAE,iCAA6B;UAAAzB,SAAA,EAAAS,KAAA,CAAAN,KAAA,CAAAgC,IAAA;UAAApC,QAAA,EAAAI;QAAA,IACtFI,iBAAyB,GAAAA,iBAAA,CAAAE,KAAA,EAAAK,MAAA,mBAAAW,GAAA,CACXpB,WAAA,EACd;UACgB,aAAW,MAAQ;UACpBL,SAAA,EAAAiC,OAAA,CAAAxB,KAAA,CAAAN,KAAA,CAAAF,IAAA,CAAAkC,IAAA,EAAA1B,KAAA,CAAAN,KAAA,CAAAF,IAAA,CAAAO,IAAA,CAAAM,MAAA;QACF,CACF,CAAE;MACJ;IAEJ,CACL,GACG,eAAIW,GAAA;MAAA,gDAAAb,EAAA;MAAAyB,MAAA,GAAAvB,MAAA;MAAAd,SAAA,EAAAS,KAAA,CAAA6B,IAAA;MAAAvC,QAAA,iBAAA0B,GAAA,CAAAc,kBAAA,CAAAC,QAAA;QAAAC,KAAA;UAAAC,gBAAA;QAAA;QAAA3C;MAAA;IAAA;EACL;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}