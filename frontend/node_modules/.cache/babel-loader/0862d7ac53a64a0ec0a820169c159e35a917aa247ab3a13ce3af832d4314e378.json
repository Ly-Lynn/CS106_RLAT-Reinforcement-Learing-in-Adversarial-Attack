{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { useAccordionContext } from './AccordionPanelContext.mjs';\nconst AccordionTitle = ({\n  as: Heading = \"h2\",\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const {\n    arrowIcon: ArrowIcon,\n    flush,\n    isOpen,\n    setOpen\n  } = useAccordionContext();\n  const onClick = () => typeof setOpen !== \"undefined\" && setOpen();\n  const theme = mergeDeep(getTheme().accordion.title, customTheme);\n  return /* @__PURE__ */jsxs(\"button\", {\n    className: twMerge(theme.base, theme.flush[flush ? \"on\" : \"off\"], theme.open[isOpen ? \"on\" : \"off\"], className),\n    onClick,\n    type: \"button\",\n    ...props,\n    children: [/* @__PURE__ */jsx(Heading, {\n      className: theme.heading,\n      \"data-testid\": \"flowbite-accordion-heading\",\n      children\n    }), ArrowIcon && /* @__PURE__ */jsx(ArrowIcon, {\n      \"aria-hidden\": true,\n      className: twMerge(theme.arrow.base, theme.arrow.open[isOpen ? \"on\" : \"off\"]),\n      \"data-testid\": \"flowbite-accordion-arrow\"\n    })]\n  });\n};\nexport { AccordionTitle };","map":{"version":3,"names":["AccordionTitle","as","Heading","children","className","theme","customTheme","props","arrowIcon","ArrowIcon","flush","isOpen","setOpen","useAccordionContext","onClick","mergeDeep","getTheme","accordion","title","jsxs","twMerge","base","open","type","jsx","heading","arrow"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Accordion\\AccordionTitle.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteBoolean, FlowbiteHeadingLevel } from \"../Flowbite\";\nimport { useAccordionContext } from \"./AccordionPanelContext\";\n\nexport interface FlowbiteAccordionTitleTheme {\n  arrow: {\n    base: string;\n    open: FlowbiteBoolean;\n  };\n  base: string;\n  flush: FlowbiteBoolean;\n  heading: string;\n  open: FlowbiteBoolean;\n}\n\nexport interface AccordionTitleProps extends ComponentProps<\"button\"> {\n  arrowIcon?: FC<ComponentProps<\"svg\">>;\n  as?: FlowbiteHeadingLevel;\n  theme?: DeepPartial<FlowbiteAccordionTitleTheme>;\n}\n\nexport const AccordionTitle: FC<AccordionTitleProps> = ({\n  as: Heading = \"h2\",\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { arrowIcon: ArrowIcon, flush, isOpen, setOpen } = useAccordionContext();\n  const onClick = () => typeof setOpen !== \"undefined\" && setOpen();\n\n  const theme = mergeDeep(getTheme().accordion.title, customTheme);\n\n  return (\n    <button\n      className={twMerge(theme.base, theme.flush[flush ? \"on\" : \"off\"], theme.open[isOpen ? \"on\" : \"off\"], className)}\n      onClick={onClick}\n      type=\"button\"\n      {...props}\n    >\n      <Heading className={theme.heading} data-testid=\"flowbite-accordion-heading\">\n        {children}\n      </Heading>\n      {ArrowIcon && (\n        <ArrowIcon\n          aria-hidden\n          className={twMerge(theme.arrow.base, theme.arrow.open[isOpen ? \"on\" : \"off\"])}\n          data-testid=\"flowbite-accordion-arrow\"\n        />\n      )}\n    </button>\n  );\n};\n"],"mappings":";;;;;;;AAQA,MAAMA,cAAc,GAAAA,CAAA;EAClBC,EAAA,EAAAC,OAAQ;EACRC,QAAA;EACAC,SAAO;EACPC,KAAG,EAAAC,WAAK;EACT,GAAAC;AACD,MAAE;EACA,MAAM;IAAAC,SAAU,EAAAC,SAAM;IAAOC,KAAA;IAAOC,MAAK;IAAAC;EAAW,IAAIC,mBAAU;EAClE,MAAMC,OAAK,GAAGA,CAAA,YAAUF,OAAW,gBAAiB,IAAAA,OAAW,CAAC,CAAC;EACjE,MAAAP,KAAA,GAAAU,SAAuB,CAAAC,QAAI,GAAAC,SAAA,CAAAC,KAAA,EAAAZ,WAAA;EAC7B,OAAI,eAAQa,IAAA,CACR,UACJ;IACMf,SAAO,EAAAgB,OAAA,CAAAf,KAAA,CAAAgB,IAAA,EAAAhB,KAAA,CAAAK,KAAA,CAAAA,KAAA,kBAAAL,KAAA,CAAAiB,IAAA,CAAAX,MAAA,kBAAAP,SAAA;IACPU,OAAM;IACNS,IAAG,UAAK;IACR,GAAAhB,KAAQ;IACdJ,QAAA,GACQ,eAASqB,GAAA,CAAAtB,OAAA,EAAoB;MAAAE,SAAG,EAAAC,KAAA,CAAAoB,OAAA;MAAA;MAAAtB;IAAA,IACxCM,SAAU,IAAS,eAAAe,GAAA,CACTf,SAAA,EACV;MACY,aAAW,MAAQ;MACnBL,SAAA,EAAAgB,OAAe,CAAAf,KAAA,CAAAqB,KAAA,CAAAL,IAAA,EAAAhB,KAA0B,CAAAqB,KAAA,CAAAJ,IAAA,CAAAX,MAAA;MAC1C;IACF,CACF;EAEH,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}