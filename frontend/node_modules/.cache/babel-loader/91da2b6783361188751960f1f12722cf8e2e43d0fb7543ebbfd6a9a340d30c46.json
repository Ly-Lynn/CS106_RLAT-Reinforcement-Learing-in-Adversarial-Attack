{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { TimelineContentContext } from './TimelineContentContext.mjs';\nimport { useTimelineContext } from './TimelineContext.mjs';\nimport { useTimelineItemContext } from './TimelineItemContext.mjs';\nconst TimelineContent = _ref => {\n  let {\n    children,\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const {\n    horizontal\n  } = useTimelineContext();\n  const {\n    theme: itemTheme\n  } = useTimelineItemContext();\n  const theme = mergeDeep(itemTheme.content, customTheme);\n  return /* @__PURE__ */jsx(TimelineContentContext.Provider, {\n    value: {\n      theme\n    },\n    children: /* @__PURE__ */jsx(\"div\", {\n      \"data-testid\": \"timeline-content\",\n      className: twMerge(horizontal && theme.root.base, className),\n      ...props,\n      children\n    })\n  });\n};\nexport { TimelineContent };","map":{"version":3,"names":["TimelineContent","_ref","children","className","theme","customTheme","props","horizontal","useTimelineContext","itemTheme","useTimelineItemContext","mergeDeep","content","jsx","TimelineContentContext","Provider","value","twMerge","root","base"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Timeline\\TimelineContent.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteTimelineBodyTheme } from \"./TimelineBody\";\nimport { TimelineContentContext } from \"./TimelineContentContext\";\nimport { useTimelineContext } from \"./TimelineContext\";\nimport { useTimelineItemContext } from \"./TimelineItemContext\";\nimport type { FlowbiteTimelineTimeTheme } from \"./TimelineTime\";\nimport type { FlowbiteTimelineTitleTheme } from \"./TimelineTitle\";\n\nexport interface FlowbiteTimelineContentTheme {\n  root: {\n    base: string;\n  };\n  time: FlowbiteTimelineTitleTheme;\n  title: FlowbiteTimelineTimeTheme;\n  body: FlowbiteTimelineBodyTheme;\n}\n\nexport interface TimelineContentProps extends ComponentProps<\"div\"> {\n  theme?: DeepPartial<FlowbiteTimelineContentTheme>;\n}\n\nexport const TimelineContent: FC<TimelineContentProps> = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { horizontal } = useTimelineContext();\n  const { theme: itemTheme } = useTimelineItemContext();\n\n  const theme = mergeDeep(itemTheme.content, customTheme);\n\n  return (\n    <TimelineContentContext.Provider value={{ theme }}>\n      <div data-testid=\"timeline-content\" className={twMerge(horizontal && theme.root.base, className)} {...props}>\n        {children}\n      </div>\n    </TimelineContentContext.Provider>\n  );\n};\n"],"mappings":";;;;;;;;AASA,MAAEA,eAAQ,GAAAC,IAAA,IAKR;EAAA,IALQ;IACRC,QAAA;IACAC,SAAO;IACPC,KAAG,EAAAC,WAAK;IACT,GAAAC;EACD,IAAAL,IAAA;EACE,MAAM;IAAEM;EAAO,IAAAC,kBAAc;EAC7B,MAAM;IAAAJ,KAAK,EAAGK;EAAU,IAAAC,sBAAmB;EAC3C,MAAAN,KAAA,GAAAO,SAAuB,CAAAF,SAAI,CAAAG,OAAA,EAAAP,WAAuB;EACpD,sBAAAQ,GAAA,CAAAC,sBAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAZ;IAAA;IAAAF,QAAA,iBAAAW,GAAA;MAAA;MAAAV,SAAA,EAAAc,OAAA,CAAAV,UAAA,IAAAH,KAAA,CAAAc,IAAA,CAAAC,IAAA,EAAAhB,SAAA;MAAA,GAAAG,KAAA;MAAAJ;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}