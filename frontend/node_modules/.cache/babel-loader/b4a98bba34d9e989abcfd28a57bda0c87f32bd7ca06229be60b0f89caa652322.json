{"ast":null,"code":"'use client';\n\nimport { createContext, useContext } from 'react';\nconst ToastContext = createContext(void 0);\nfunction useToastContext() {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error(\"useToastContext should be used within the ToastContext provider!\");\n  }\n  return context;\n}\nexport { ToastContext, useToastContext };","map":{"version":3,"names":["ToastContext","createContext","useToastContext","context","useContext","Error"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Toast\\ToastContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext } from \"react\";\nimport type { FlowbiteToastTheme } from \"./Toast\";\n\nexport type Duration = 75 | 100 | 150 | 200 | 300 | 500 | 700 | 1000;\n\ntype ToastContext = {\n  theme: FlowbiteToastTheme;\n  duration?: Duration;\n  isClosed?: boolean;\n  isRemoved?: boolean;\n  setIsClosed: (isClosed: boolean) => void;\n  setIsRemoved: (isRemoved: boolean) => void;\n};\n\nexport const ToastContext = createContext<ToastContext | undefined>(undefined);\n\nexport function useToastContext(): ToastContext {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error(\"useToastContext should be used within the ToastContext provider!\");\n  }\n\n  return context;\n}\n"],"mappings":";;;AAIO,MAAAA,YAAS,GAAAC,aAAkB;AAClC,SAAQC,eAAUA,CAAA;EAChB,MAAKC,OAAO,GAAEC,UAAA,CAAAJ,YAAA;EAChB,IAAI,CAAAG,OAAU;IACX,UAAAE,KAAA;EACD;EACF,OAAAF,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}