{"ast":null,"code":"import { offset, autoPlacement, flip, shift, arrow } from '@floating-ui/react';\nconst getMiddleware = ({\n  arrowRef,\n  placement\n}) => {\n  const middleware = [];\n  middleware.push(offset(8));\n  middleware.push(placement === \"auto\" ? autoPlacement() : flip());\n  middleware.push(shift({\n    padding: 8\n  }));\n  if (arrowRef?.current) {\n    middleware.push(arrow({\n      element: arrowRef.current\n    }));\n  }\n  return middleware;\n};\nconst getPlacement = ({\n  placement\n}) => {\n  return placement === \"auto\" ? void 0 : placement;\n};\nconst getArrowPlacement = ({\n  placement\n}) => {\n  return {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n  }[placement.split(\"-\")[0]];\n};\nexport { getArrowPlacement, getMiddleware, getPlacement };","map":{"version":3,"names":["getMiddleware","arrowRef","placement","middleware","push","offset","autoPlacement","flip","shift","padding","current","arrow","element","getPlacement","getArrowPlacement","top","right","bottom","left","split"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Floating\\helpers.ts"],"sourcesContent":["import type { Middleware, Placement } from \"@floating-ui/react\";\nimport { arrow, autoPlacement, flip, offset, shift } from \"@floating-ui/react\";\nimport type { RefObject } from \"react\";\n\n/**\n * @see https://floating-ui.com/docs/middleware\n */\nexport const getMiddleware = ({\n  arrowRef,\n  placement,\n}: {\n  arrowRef?: RefObject<HTMLDivElement>;\n  placement: \"auto\" | Placement;\n}): Middleware[] => {\n  const middleware = [];\n\n  middleware.push(offset(8));\n  middleware.push(placement === \"auto\" ? autoPlacement() : flip());\n  middleware.push(shift({ padding: 8 }));\n\n  if (arrowRef?.current) {\n    middleware.push(arrow({ element: arrowRef.current }));\n  }\n\n  return middleware;\n};\n\nexport const getPlacement = ({ placement }: { placement: \"auto\" | Placement }): Placement | undefined => {\n  return placement === \"auto\" ? undefined : placement;\n};\n\nexport const getArrowPlacement = ({ placement }: { placement: Placement }): Placement => {\n  return {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\",\n  }[placement.split(\"-\")[0]] as Placement;\n};\n"],"mappings":";AAEY,MAACA,aAAa,GAAGA,CAAC;EAC5BC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,UAAU,GAAG,EAAE;EACrBA,UAAU,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1BF,UAAU,CAACC,IAAI,CAACF,SAAS,KAAK,MAAM,GAAGI,aAAa,EAAE,GAAGC,IAAI,EAAE,CAAC;EAChEJ,UAAU,CAACC,IAAI,CAACI,KAAK,CAAC;IAAEC,OAAO,EAAE;EAAC,CAAE,CAAC,CAAC;EACtC,IAAIR,QAAQ,EAAES,OAAO,EAAE;IACrBP,UAAU,CAACC,IAAI,CAACO,KAAK,CAAC;MAAEC,OAAO,EAAEX,QAAQ,CAACS;IAAO,CAAE,CAAC,CAAC;EACzD;EACE,OAAOP,UAAU;AACnB;AACY,MAACU,YAAY,GAAGA,CAAC;EAAEX;AAAS,CAAE,KAAK;EAC7C,OAAOA,SAAS,KAAK,MAAM,GAAG,KAAK,CAAC,GAAGA,SAAS;AAClD;AACY,MAACY,iBAAiB,GAAGA,CAAC;EAAEZ;AAAS,CAAE,KAAK;EAClD,OAAO;IACLa,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE;EACV,CAAG,CAAChB,SAAS,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}