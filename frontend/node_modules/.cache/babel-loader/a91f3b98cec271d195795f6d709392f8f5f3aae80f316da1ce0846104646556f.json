{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst FloatingLabel = forwardRef((_ref, ref) => {\n  let {\n    label,\n    helperText,\n    color = \"default\",\n    sizing = \"md\",\n    variant,\n    disabled = false,\n    theme: customTheme = {},\n    className,\n    ...props\n  } = _ref;\n  const randomId = useId();\n  const theme = mergeDeep(getTheme().floatingLabel, customTheme);\n  return /* @__PURE__ */jsxs(\"div\", {\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: twMerge(\"relative\", variant === \"standard\" ? \"z-0\" : \"\"),\n      children: [/* @__PURE__ */jsx(\"input\", {\n        type: \"text\",\n        id: props.id ? props.id : \"floatingLabel\" + randomId,\n        \"aria-describedby\": \"outlined_success_help\",\n        className: twMerge(theme.input[color][variant][sizing], className),\n        placeholder: \" \",\n        \"data-testid\": \"floating-label\",\n        disabled,\n        ...props,\n        ref\n      }), /* @__PURE__ */jsx(\"label\", {\n        htmlFor: props.id ? props.id : \"floatingLabel\" + randomId,\n        className: twMerge(theme.label[color][variant][sizing], className),\n        children: label\n      })]\n    }), /* @__PURE__ */jsx(\"p\", {\n      id: \"outlined_helper_text\" + randomId,\n      className: twMerge(theme.helperText[color], className),\n      children: helperText\n    })]\n  });\n});\nFloatingLabel.displayName = \"FloatingLabel\";\nexport { FloatingLabel };","map":{"version":3,"names":["FloatingLabel","forwardRef","_ref","ref","label","helperText","color","sizing","variant","disabled","theme","customTheme","className","props","randomId","useId","mergeDeep","getTheme","floatingLabel","jsxs","children","twMerge","jsx","type","id","input","placeholder","htmlFor","displayName"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\FloatingLabel\\FloatingLabel.tsx"],"sourcesContent":["import type { ComponentPropsWithoutRef } from \"react\";\nimport { forwardRef, useId } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport type { FlowbiteFloatingLabelTheme } from \"./theme\";\n\nexport type FloatingLabelColor = \"default\" | \"success\" | \"error\";\nexport type FloatingLabelSizing = \"sm\" | \"md\";\nexport type FloatingLabelVariant = \"filled\" | \"outlined\" | \"standard\";\n\nexport interface FloatingLabelProps extends ComponentPropsWithoutRef<\"input\"> {\n  label: string;\n  helperText?: string;\n  color?: FloatingLabelColor;\n  sizing?: FloatingLabelSizing;\n  variant: FloatingLabelVariant;\n  disabled?: boolean;\n  theme?: DeepPartial<FlowbiteFloatingLabelTheme>;\n}\n\nexport const FloatingLabel = forwardRef<HTMLInputElement, FloatingLabelProps>(\n  (\n    {\n      label,\n      helperText,\n      color = \"default\",\n      sizing = \"md\",\n      variant,\n      disabled = false,\n      theme: customTheme = {},\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const randomId = useId();\n    const theme = mergeDeep(getTheme().floatingLabel, customTheme);\n\n    return (\n      <div>\n        <div className={twMerge(\"relative\", variant === \"standard\" ? \"z-0\" : \"\")}>\n          <input\n            type=\"text\"\n            id={props.id ? props.id : \"floatingLabel\" + randomId}\n            aria-describedby=\"outlined_success_help\"\n            className={twMerge(theme.input[color][variant][sizing], className)}\n            placeholder=\" \"\n            data-testid=\"floating-label\"\n            disabled={disabled}\n            {...props}\n            ref={ref}\n          />\n          <label\n            htmlFor={props.id ? props.id : \"floatingLabel\" + randomId}\n            className={twMerge(theme.label[color][variant][sizing], className)}\n          >\n            {label}\n          </label>\n        </div>\n        <p id={\"outlined_helper_text\" + randomId} className={twMerge(theme.helperText[color], className)}>\n          {helperText}\n        </p>\n      </div>\n    );\n  },\n);\n\nFloatingLabel.displayName = \"FloatingLabel\";\n"],"mappings":";;;;;AAMY,MAACA,aAAa,GAAGC,UAAU,CACrC,CAAAC,IAAA,EAUGC,GAAG,KAAK;EAAA,IAVV;IACCC,KAAK;IACLC,UAAU;IACVC,KAAK,GAAG,SAAS;IACjBC,MAAM,GAAG,IAAI;IACbC,OAAO;IACPC,QAAQ,GAAG,KAAK;IAChBC,KAAK,EAAEC,WAAW,GAAG,EAAE;IACvBC,SAAS;IACT,GAAGC;EACP,CAAG,GAAAX,IAAA;EACC,MAAMY,QAAQ,GAAGC,KAAK,EAAE;EACxB,MAAML,KAAK,GAAGM,SAAS,CAACC,QAAQ,EAAE,CAACC,aAAa,EAAEP,WAAW,CAAC;EAC9D,sBAAuBQ,IAAI,CAAC,KAAK,EAAE;IAAEC,QAAQ,EAAE,CACnD,eAAsBD,IAAI,CAAC,KAAK,EAAE;MAAEP,SAAS,EAAES,OAAO,CAAC,UAAU,EAAEb,OAAO,KAAK,UAAU,GAAG,KAAK,GAAG,EAAE,CAAC;MAAEY,QAAQ,EAAE,CACnH,eAAwBE,GAAG,CACjB,OAAO,EACP;QACEC,IAAI,EAAE,MAAM;QACZC,EAAE,EAAEX,KAAK,CAACW,EAAE,GAAGX,KAAK,CAACW,EAAE,GAAG,eAAe,GAAGV,QAAQ;QACpD,kBAAkB,EAAE,uBAAuB;QAC3CF,SAAS,EAAES,OAAO,CAACX,KAAK,CAACe,KAAK,CAACnB,KAAK,CAAC,CAACE,OAAO,CAAC,CAACD,MAAM,CAAC,EAAEK,SAAS,CAAC;QAClEc,WAAW,EAAE,GAAG;QAChB,aAAa,EAAE,gBAAgB;QAC/BjB,QAAQ;QACR,GAAGI,KAAK;QACRV;MACZ,CACA,CAAS,EACT,eAAwBmB,GAAG,CACjB,OAAO,EACP;QACEK,OAAO,EAAEd,KAAK,CAACW,EAAE,GAAGX,KAAK,CAACW,EAAE,GAAG,eAAe,GAAGV,QAAQ;QACzDF,SAAS,EAAES,OAAO,CAACX,KAAK,CAACN,KAAK,CAACE,KAAK,CAAC,CAACE,OAAO,CAAC,CAACD,MAAM,CAAC,EAAEK,SAAS,CAAC;QAClEQ,QAAQ,EAAEhB;MACtB,CACA,CAAS;IACF,CAAE,CAAC,EACV,eAAsBkB,GAAG,CAAC,GAAG,EAAE;MAAEE,EAAE,EAAE,sBAAsB,GAAGV,QAAQ;MAAEF,SAAS,EAAES,OAAO,CAACX,KAAK,CAACL,UAAU,CAACC,KAAK,CAAC,EAAEM,SAAS,CAAC;MAAEQ,QAAQ,EAAEf;IAAU,CAAE,CAAC;EAClJ,CAAE,CAAC;AACR,CACA;AACAL,aAAa,CAAC4B,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}