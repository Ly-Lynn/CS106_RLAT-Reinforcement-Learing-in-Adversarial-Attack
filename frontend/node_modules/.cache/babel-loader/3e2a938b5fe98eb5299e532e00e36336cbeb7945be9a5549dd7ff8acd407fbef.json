{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { HiSun, HiMoon } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useIsMounted } from '../../hooks/use-is-mounted.mjs';\nimport { useThemeMode } from '../../hooks/use-theme-mode.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nconst DarkThemeToggle = _ref => {\n  let {\n    className,\n    theme: customTheme = {},\n    iconDark: IconDark = HiSun,\n    iconLight: IconLight = HiMoon,\n    ...props\n  } = _ref;\n  const isMounted = useIsMounted();\n  const {\n    computedMode,\n    toggleMode\n  } = useThemeMode();\n  const theme = mergeDeep(getTheme().darkThemeToggle, customTheme);\n  return /* @__PURE__ */jsxs(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    className: twMerge(theme.root.base, className),\n    onClick: toggleMode,\n    ...props,\n    children: [/* @__PURE__ */jsx(IconDark, {\n      \"aria-label\": \"Currently dark mode\",\n      \"data-active\": isMounted && computedMode === \"dark\",\n      className: twMerge(theme.root.icon, \"hidden dark:block\")\n    }), /* @__PURE__ */jsx(IconLight, {\n      \"aria-label\": \"Currently light mode\",\n      \"data-active\": isMounted && computedMode === \"light\",\n      className: twMerge(theme.root.icon, \"dark:hidden\")\n    })]\n  });\n};\nDarkThemeToggle.displayName = \"DarkThemeToggle\";\nexport { DarkThemeToggle };","map":{"version":3,"names":["DarkThemeToggle","_ref","className","theme","customTheme","iconDark","IconDark","HiSun","iconLight","IconLight","HiMoon","props","isMounted","useIsMounted","computedMode","toggleMode","useThemeMode","mergeDeep","getTheme","darkThemeToggle","jsxs","type","twMerge","root","base","onClick","children","jsx","icon"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\DarkThemeToggle\\DarkThemeToggle.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport type { IconBaseProps } from \"react-icons\";\nimport { HiMoon, HiSun } from \"react-icons/hi\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { useIsMounted } from \"../../hooks/use-is-mounted\";\nimport { useThemeMode } from \"../../hooks/use-theme-mode\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\n\nexport interface FlowbiteDarkThemeToggleTheme {\n  root: FlowbiteDarkThemeToggleRootTheme;\n}\n\nexport interface FlowbiteDarkThemeToggleRootTheme {\n  base: string;\n  icon: string;\n}\n\nexport interface DarkThemeToggleProps extends ComponentProps<\"button\"> {\n  iconDark?: FC<IconBaseProps>;\n  iconLight?: FC<IconBaseProps>;\n  theme?: DeepPartial<FlowbiteDarkThemeToggleTheme>;\n}\n\nexport const DarkThemeToggle: FC<DarkThemeToggleProps> = ({\n  className,\n  theme: customTheme = {},\n  iconDark: IconDark = HiSun,\n  iconLight: IconLight = HiMoon,\n  ...props\n}) => {\n  const isMounted = useIsMounted();\n  const { computedMode, toggleMode } = useThemeMode();\n\n  const theme = mergeDeep(getTheme().darkThemeToggle, customTheme);\n\n  return (\n    <button\n      type=\"button\"\n      aria-label=\"Toggle dark mode\"\n      data-testid=\"dark-theme-toggle\"\n      className={twMerge(theme.root.base, className)}\n      onClick={toggleMode}\n      {...props}\n    >\n      <IconDark\n        aria-label=\"Currently dark mode\"\n        data-active={isMounted && computedMode === \"dark\"}\n        className={twMerge(theme.root.icon, \"hidden dark:block\")}\n      />\n      <IconLight\n        aria-label=\"Currently light mode\"\n        data-active={isMounted && computedMode === \"light\"}\n        className={twMerge(theme.root.icon, \"dark:hidden\")}\n      />\n    </button>\n  );\n};\n\nDarkThemeToggle.displayName = \"DarkThemeToggle\";\n"],"mappings":";;;;;;;;;AAUA,MAAEA,eAAS,GAAAC,IAAA,IAMT;EAAA,IANS;IACTC,SAAO;IACPC,KAAA,EAAAC,WAAkB,GAAG;IACrBC,QAAA,EAASC,QAAE,GAASC,KAAG;IACvBC,SAAQ,EAAAC,SAAA,GAAAC,MAAA;IACT,GAAAC;EACD,IAAAV,IAAA;EACE,MAAMW,SAAE,GAAAC,YAAc,EAAU;EAChC,MAAM;IAAAC,YAAQ;IAAAC;EAAkB,CAAE,GAACC,YAAA,CAAe;EAClD,MAAAb,KAAA,GAAAc,SAAuB,CAAAC,QAAI,GAAAC,eAAA,EAAAf,WAAA;EAC7B,OAAI,eAAQgB,IAAA,CACR,UACJ;IACMC,IAAA,UAAc;IACd,cAAa,kBAAE;IACf,aAAW,qBAAuB;IAClCnB,SAAS,EAAAoB,OAAA,CAAUnB,KAAA,CAAAoB,IAAA,CAAAC,IAAA,EAAAtB,SAAA;IACnBuB,OAAG,EAAKV,UAAA;IACR,GAAAJ,KAAQ;IACde,QAAA,GACA,eAAkBC,GAAA,CACRrB,QAAA,EACV;MACY,cAAa,qBAAe;MAC5B,aAAW,EAAAM,SAAa,IAACE,YAAW;MACrCZ,SAAA,EAAAoB,OAAA,CAAAnB,KAAA,CAAAoB,IAAA,CAAAK,IAAA;IACF,CACT,GACA,eAAmBD,GAAA,CACTlB,SAAA,EACV;MACY,cAAa,sBAAe;MAC5B,aAAW,EAAAG,SAAa,IAACE,YAAW,YAAc;MACnDZ,SAAA,EAAAoB,OAAA,CAAAnB,KAAA,CAAAoB,IAAA,CAAAK,IAAA;IACF,CACF;EAEH,CACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}