{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { useSidebarContext } from './SidebarContext.mjs';\nimport { SidebarItemContext } from './SidebarItemContext.mjs';\nconst SidebarItemGroup = _ref => {\n  let {\n    children,\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const {\n    theme: rootTheme\n  } = useSidebarContext();\n  const theme = mergeDeep(rootTheme.itemGroup, customTheme);\n  return /* @__PURE__ */jsx(\"ul\", {\n    \"data-testid\": \"flowbite-sidebar-item-group\",\n    className: twMerge(theme.base, className),\n    ...props,\n    children: /* @__PURE__ */jsx(SidebarItemContext.Provider, {\n      value: {\n        isInsideCollapse: false\n      },\n      children\n    })\n  });\n};\nSidebarItemGroup.displayName = \"Sidebar.ItemGroup\";\nexport { SidebarItemGroup };","map":{"version":3,"names":["SidebarItemGroup","_ref","children","className","theme","customTheme","props","rootTheme","useSidebarContext","mergeDeep","itemGroup","jsx","twMerge","base","SidebarItemContext","Provider","value","isInsideCollapse"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Sidebar\\SidebarItemGroup.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport { useSidebarContext } from \"./SidebarContext\";\nimport { SidebarItemContext } from \"./SidebarItemContext\";\n\nexport interface FlowbiteSidebarItemGroupTheme {\n  base: string;\n}\n\nexport interface SidebarItemGroupProps extends ComponentProps<\"ul\"> {\n  theme?: DeepPartial<FlowbiteSidebarItemGroupTheme>;\n}\n\nexport const SidebarItemGroup: FC<SidebarItemGroupProps> = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { theme: rootTheme } = useSidebarContext();\n\n  const theme = mergeDeep(rootTheme.itemGroup, customTheme);\n\n  return (\n    <ul data-testid=\"flowbite-sidebar-item-group\" className={twMerge(theme.base, className)} {...props}>\n      <SidebarItemContext.Provider value={{ isInsideCollapse: false }}>{children}</SidebarItemContext.Provider>\n    </ul>\n  );\n};\n\nSidebarItemGroup.displayName = \"Sidebar.ItemGroup\";\n"],"mappings":";;;;;;;AAQA,MAAEA,gBAAQ,GAAAC,IAAA,IAKR;EAAA,IALQ;IACRC,QAAA;IACAC,SAAO;IACPC,KAAG,EAAAC,WAAK;IACT,GAAAC;EACD,IAAAL,IAAA;EACE,MAAM;IAAAG,KAAK,EAAGG;EAAU,IAAAC,iBAAqB;EAC7C,MAAAJ,KAAA,GAAAK,SAAuB,CAAAF,SAAU,CAAAG,SAAE,EAAAL,WAAe;EAClD,sBAAAM,GAAA;IAAA;IAAAR,SAAA,EAAAS,OAAA,CAAAR,KAAA,CAAAS,IAAA,EAAAV,SAAA;IAAA,GAAAG,KAAA;IAAAJ,QAAA,iBAAAS,GAAA,CAAAG,kBAAA,CAAAC,QAAA;MAAAC,KAAA;QAAAC,gBAAA;MAAA;MAAAf;IAAA;EAAA;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}