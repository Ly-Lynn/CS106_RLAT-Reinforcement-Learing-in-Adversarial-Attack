{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { TableBodyContext } from './TableBodyContext.mjs';\nimport { useTableContext } from './TableContext.mjs';\nconst TableBody = forwardRef(({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}, ref) => {\n  const {\n    theme: rootTheme\n  } = useTableContext();\n  const theme = mergeDeep(rootTheme.body, customTheme);\n  return /* @__PURE__ */jsx(TableBodyContext.Provider, {\n    value: {\n      theme\n    },\n    children: /* @__PURE__ */jsx(\"tbody\", {\n      className: twMerge(theme.base, className),\n      ref,\n      ...props,\n      children\n    })\n  });\n});\nTableBody.displayName = \"Table.Body\";\nexport { TableBody };","map":{"version":3,"names":["TableBody","forwardRef","children","className","theme","customTheme","props","ref","rootTheme","useTableContext","mergeDeep","body","jsx","TableBodyContext","Provider","value","twMerge","base"],"sources":["C:\\Users\\thuyl\\OneDrive - Trường ĐH CNTT - University of Information Technology\\My documents\\AI\\ai-project\\node_modules\\flowbite-react\\src\\components\\Table\\TableBody.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentPropsWithRef } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport type { DeepPartial } from \"../../types\";\nimport { TableBodyContext } from \"./TableBodyContext\";\nimport type { FlowbiteTableCellTheme } from \"./TableCell\";\nimport { useTableContext } from \"./TableContext\";\n\nexport interface FlowbiteTableBodyTheme {\n  base: string;\n  cell: FlowbiteTableCellTheme;\n}\n\nexport interface TableBodyProps extends ComponentPropsWithRef<\"tbody\"> {\n  theme?: DeepPartial<FlowbiteTableBodyTheme>;\n}\n\nexport const TableBody = forwardRef<HTMLTableSectionElement, TableBodyProps>(\n  ({ children, className, theme: customTheme = {}, ...props }, ref) => {\n    const { theme: rootTheme } = useTableContext();\n\n    const theme = mergeDeep(rootTheme.body, customTheme);\n\n    return (\n      <TableBodyContext.Provider value={{ theme }}>\n        <tbody className={twMerge(theme.base, className)} ref={ref} {...props}>\n          {children}\n        </tbody>\n      </TableBodyContext.Provider>\n    );\n  },\n);\n\nTableBody.displayName = \"Table.Body\";\n"],"mappings":";;;;;;;;AASA,MAAKA,SAAU,GAAAC,UAAW,CAC1B;EAAIC,QAAQ;EAAAC,SAAO;EAAAC,KAAW,EAAGC,WAAA,IAAe;EAAG,GAAAC;AAAA,GAAAC,GAAA;EAC/C,MAAM;IAAAH,KAAK,EAAGI;EAAU,IAAAC,eAAgB;EACxC,MAAAL,KAAA,GAAAM,SAAuB,CAAAF,SAAI,CAAAG,IAAA,EAAAN,WAAiB,CAAQ;EACrD,sBAAAO,GAAA,CAAAC,gBAAA,CAAAC,QAAA;IAAAC,KAAA;MAAAX;IAAA;IAAAF,QAAA,iBAAAU,GAAA;MAAAT,SAAA,EAAAa,OAAA,CAAAZ,KAAA,CAAAa,IAAA,EAAAd,SAAA;MAAAI,GAAA;MAAA,GAAAD,KAAA;MAAAJ;IAAA;EAAA;AACD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}